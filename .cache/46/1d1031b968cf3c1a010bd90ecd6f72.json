{"id":"node_modules/parse/lib/browser/ParseQuery.js","dependencies":[{"name":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\package.json","includedInParent":true,"mtime":1558292573845},{"name":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\parse\\package.json","includedInParent":true,"mtime":1558291325981},{"name":"@babel/runtime/helpers/interopRequireDefault","loc":{"line":3,"column":37},"parent":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\parse\\lib\\browser\\ParseQuery.js","resolved":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"},{"name":"@babel/runtime/helpers/typeof","loc":{"line":10,"column":46},"parent":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\parse\\lib\\browser\\ParseQuery.js","resolved":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\@babel\\runtime\\helpers\\typeof.js"},{"name":"@babel/runtime/regenerator","loc":{"line":12,"column":50},"parent":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\parse\\lib\\browser\\ParseQuery.js","resolved":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\@babel\\runtime\\regenerator\\index.js"},{"name":"@babel/runtime/helpers/asyncToGenerator","loc":{"line":14,"column":56},"parent":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\parse\\lib\\browser\\ParseQuery.js","resolved":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\@babel\\runtime\\helpers\\asyncToGenerator.js"},{"name":"@babel/runtime/helpers/classCallCheck","loc":{"line":16,"column":54},"parent":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\parse\\lib\\browser\\ParseQuery.js","resolved":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\@babel\\runtime\\helpers\\classCallCheck.js"},{"name":"@babel/runtime/helpers/createClass","loc":{"line":18,"column":51},"parent":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\parse\\lib\\browser\\ParseQuery.js","resolved":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\@babel\\runtime\\helpers\\createClass.js"},{"name":"@babel/runtime/helpers/defineProperty","loc":{"line":20,"column":54},"parent":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\parse\\lib\\browser\\ParseQuery.js","resolved":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js"},{"name":"./CoreManager","loc":{"line":22,"column":50},"parent":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\parse\\lib\\browser\\ParseQuery.js","resolved":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\parse\\lib\\browser\\CoreManager.js"},{"name":"./encode","loc":{"line":24,"column":45},"parent":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\parse\\lib\\browser\\ParseQuery.js","resolved":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\parse\\lib\\browser\\encode.js"},{"name":"./promiseUtils","loc":{"line":26,"column":28},"parent":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\parse\\lib\\browser\\ParseQuery.js","resolved":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\parse\\lib\\browser\\promiseUtils.js"},{"name":"./ParseError","loc":{"line":28,"column":49},"parent":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\parse\\lib\\browser\\ParseQuery.js","resolved":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\parse\\lib\\browser\\ParseError.js"},{"name":"./ParseGeoPoint","loc":{"line":30,"column":52},"parent":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\parse\\lib\\browser\\ParseQuery.js","resolved":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\parse\\lib\\browser\\ParseGeoPoint.js"},{"name":"./ParseObject","loc":{"line":32,"column":50},"parent":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\parse\\lib\\browser\\ParseQuery.js","resolved":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\parse\\lib\\browser\\ParseObject.js"},{"name":"./OfflineQuery","loc":{"line":34,"column":51},"parent":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\parse\\lib\\browser\\ParseQuery.js","resolved":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\parse\\lib\\browser\\OfflineQuery.js"},{"name":"./LocalDatastoreUtils","loc":{"line":36,"column":35},"parent":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\parse\\lib\\browser\\ParseQuery.js","resolved":"C:\\Users\\Devon Blake\\Documents\\apps\\champsWeb\\node_modules\\parse\\lib\\browser\\LocalDatastoreUtils.js"}],"generated":{"js":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nvar _encode = _interopRequireDefault(require(\"./encode\"));\n\nvar _promiseUtils = require(\"./promiseUtils\");\n\nvar _ParseError = _interopRequireDefault(require(\"./ParseError\"));\n\nvar _ParseGeoPoint = _interopRequireDefault(require(\"./ParseGeoPoint\"));\n\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\n\nvar _OfflineQuery = _interopRequireDefault(require(\"./OfflineQuery\"));\n\nvar _LocalDatastoreUtils = require(\"./LocalDatastoreUtils\");\n/*\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n/**\n * Converts a string into a regex that matches it.\n * Surrounding with \\Q .. \\E does this, we just need to escape any \\E's in\n * the text separately.\n * @private\n */\n\n\nfunction quote(s\n/*: string*/\n) {\n  return '\\\\Q' + s.replace('\\\\E', '\\\\E\\\\\\\\E\\\\Q') + '\\\\E';\n}\n/**\n * Extracts the class name from queries. If not all queries have the same\n * class name an error will be thrown.\n */\n\n\nfunction _getClassNameFromQueries(queries\n/*: Array<ParseQuery>*/\n)\n/*: ?string*/\n{\n  var className = null;\n  queries.forEach(function (q) {\n    if (!className) {\n      className = q.className;\n    }\n\n    if (className !== q.className) {\n      throw new Error('All queries must be for the same class.');\n    }\n  });\n  return className;\n}\n/*\n * Handles pre-populating the result data of a query with select fields,\n * making sure that the data object contains keys for all objects that have\n * been requested with a select, so that our cached state updates correctly.\n */\n\n\nfunction handleSelectResult(data\n/*: any*/\n, select\n/*: Array<string>*/\n) {\n  var serverDataMask = {};\n  select.forEach(function (field) {\n    var hasSubObjectSelect = field.indexOf(\".\") !== -1;\n\n    if (!hasSubObjectSelect && !data.hasOwnProperty(field)) {\n      // this field was selected, but is missing from the retrieved data\n      data[field] = undefined;\n    } else if (hasSubObjectSelect) {\n      // this field references a sub-object,\n      // so we need to walk down the path components\n      var pathComponents = field.split(\".\");\n      var _obj = data;\n      var serverMask = serverDataMask;\n      pathComponents.forEach(function (component, index, arr) {\n        // add keys if the expected data is missing\n        if (_obj && !_obj.hasOwnProperty(component)) {\n          _obj[component] = undefined;\n        }\n\n        if (_obj !== undefined) {\n          _obj = _obj[component];\n        } //add this path component to the server mask so we can fill it in later if needed\n\n\n        if (index < arr.length - 1) {\n          if (!serverMask[component]) {\n            serverMask[component] = {};\n          }\n\n          serverMask = serverMask[component];\n        }\n      });\n    }\n  });\n\n  if (Object.keys(serverDataMask).length > 0) {\n    // When selecting from sub-objects, we don't want to blow away the missing\n    // information that we may have retrieved before. We've already added any\n    // missing selected keys to sub-objects, but we still need to add in the\n    // data for any previously retrieved sub-objects that were not selected.\n    var serverData = _CoreManager.default.getObjectStateController().getServerData({\n      id: data.objectId,\n      className: data.className\n    });\n\n    copyMissingDataWithMask(serverData, data, serverDataMask, false);\n  }\n}\n\nfunction copyMissingDataWithMask(src, dest, mask, copyThisLevel) {\n  //copy missing elements at this level\n  if (copyThisLevel) {\n    for (var _key in src) {\n      if (src.hasOwnProperty(_key) && !dest.hasOwnProperty(_key)) {\n        dest[_key] = src[_key];\n      }\n    }\n  }\n\n  for (var _key2 in mask) {\n    if (dest[_key2] !== undefined && dest[_key2] !== null && src !== undefined && src !== null) {\n      //traverse into objects as needed\n      copyMissingDataWithMask(src[_key2], dest[_key2], mask[_key2], true);\n    }\n  }\n}\n\nfunction handleOfflineSort(a, b, sorts) {\n  var order = sorts[0];\n  var operator = order.slice(0, 1);\n  var isDescending = operator === '-';\n\n  if (isDescending) {\n    order = order.substring(1);\n  }\n\n  if (order === '_created_at') {\n    order = 'createdAt';\n  }\n\n  if (order === '_updated_at') {\n    order = 'updatedAt';\n  }\n\n  if (!/^[A-Za-z][0-9A-Za-z_]*$/.test(order) || order === 'password') {\n    throw new _ParseError.default(_ParseError.default.INVALID_KEY_NAME, \"Invalid Key: \".concat(order));\n  }\n\n  var field1 = a.get(order);\n  var field2 = b.get(order);\n\n  if (field1 < field2) {\n    return isDescending ? 1 : -1;\n  }\n\n  if (field1 > field2) {\n    return isDescending ? -1 : 1;\n  }\n\n  if (sorts.length > 1) {\n    var remainingSorts = sorts.slice(1);\n    return handleOfflineSort(a, b, remainingSorts);\n  }\n\n  return 0;\n}\n/**\n * Creates a new parse Parse.Query for the given Parse.Object subclass.\n *\n * <p>Parse.Query defines a query that is used to fetch Parse.Objects. The\n * most common use case is finding all objects that match a query through the\n * <code>find</code> method. for example, this sample code fetches all objects\n * of class <code>myclass</code>. it calls a different function depending on\n * whether the fetch succeeded or not.\n *\n * <pre>\n * var query = new Parse.Query(myclass);\n * query.find().then((results) => {\n *   // results is an array of parse.object.\n * }).catch((error) =>  {\n *  // error is an instance of parse.error.\n * });</pre></p>\n *\n * <p>a Parse.Query can also be used to retrieve a single object whose id is\n * known, through the get method. for example, this sample code fetches an\n * object of class <code>myclass</code> and id <code>myid</code>. it calls a\n * different function depending on whether the fetch succeeded or not.\n *\n * <pre>\n * var query = new Parse.Query(myclass);\n * query.get(myid).then((object) => {\n *     // object is an instance of parse.object.\n * }).catch((error) =>  {\n *  // error is an instance of parse.error.\n * });</pre></p>\n *\n * <p>a Parse.Query can also be used to count the number of objects that match\n * the query without retrieving all of those objects. for example, this\n * sample code counts the number of objects of the class <code>myclass</code>\n * <pre>\n * var query = new Parse.Query(myclass);\n * query.count().then((number) => {\n *     // there are number instances of myclass.\n * }).catch((error) => {\n *     // error is an instance of Parse.Error.\n * });</pre></p>\n * @alias Parse.Query\n */\n\n\nvar ParseQuery =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @property className\n   * @type String\n   */\n\n  /**\n   * @param {(String|Parse.Object)} objectClass An instance of a subclass of Parse.Object, or a Parse className string.\n   */\n  function ParseQuery(objectClass\n  /*: string | ParseObject*/\n  ) {\n    (0, _classCallCheck2.default)(this, ParseQuery);\n    (0, _defineProperty2.default)(this, \"className\", void 0);\n    (0, _defineProperty2.default)(this, \"_where\", void 0);\n    (0, _defineProperty2.default)(this, \"_include\", void 0);\n    (0, _defineProperty2.default)(this, \"_select\", void 0);\n    (0, _defineProperty2.default)(this, \"_limit\", void 0);\n    (0, _defineProperty2.default)(this, \"_skip\", void 0);\n    (0, _defineProperty2.default)(this, \"_order\", void 0);\n    (0, _defineProperty2.default)(this, \"_queriesLocalDatastore\", void 0);\n    (0, _defineProperty2.default)(this, \"_localDatastorePinName\", void 0);\n    (0, _defineProperty2.default)(this, \"_extraOptions\", void 0);\n\n    if (typeof objectClass === 'string') {\n      if (objectClass === 'User' && _CoreManager.default.get('PERFORM_USER_REWRITE')) {\n        this.className = '_User';\n      } else {\n        this.className = objectClass;\n      }\n    } else if (objectClass instanceof _ParseObject.default) {\n      this.className = objectClass.className;\n    } else if (typeof objectClass === 'function') {\n      if (typeof objectClass.className === 'string') {\n        this.className = objectClass.className;\n      } else {\n        var _obj2 = new objectClass();\n\n        this.className = _obj2.className;\n      }\n    } else {\n      throw new TypeError('A ParseQuery must be constructed with a ParseObject or class name.');\n    }\n\n    this._where = {};\n    this._include = [];\n    this._limit = -1; // negative limit is not sent in the server request\n\n    this._skip = 0;\n    this._queriesLocalDatastore = false;\n    this._localDatastorePinName = null;\n    this._extraOptions = {};\n  }\n  /**\n   * Adds constraint that at least one of the passed in queries matches.\n   * @param {Array} queries\n   * @return {Parse.Query} Returns the query, so you can chain this call.\n   */\n\n\n  (0, _createClass2.default)(ParseQuery, [{\n    key: \"_orQuery\",\n    value: function (queries\n    /*: Array<ParseQuery>*/\n    )\n    /*: ParseQuery*/\n    {\n      var queryJSON = queries.map(function (q) {\n        return q.toJSON().where;\n      });\n      this._where.$or = queryJSON;\n      return this;\n    }\n    /**\n     * Adds constraint that all of the passed in queries match.\n     * @param {Array} queries\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"_andQuery\",\n    value: function (queries\n    /*: Array<ParseQuery>*/\n    )\n    /*: ParseQuery*/\n    {\n      var queryJSON = queries.map(function (q) {\n        return q.toJSON().where;\n      });\n      this._where.$and = queryJSON;\n      return this;\n    }\n    /**\n     * Adds constraint that none of the passed in queries match.\n     * @param {Array} queries\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"_norQuery\",\n    value: function (queries\n    /*: Array<ParseQuery>*/\n    )\n    /*: ParseQuery*/\n    {\n      var queryJSON = queries.map(function (q) {\n        return q.toJSON().where;\n      });\n      this._where.$nor = queryJSON;\n      return this;\n    }\n    /**\n     * Helper for condition queries\n     */\n\n  }, {\n    key: \"_addCondition\",\n    value: function (key\n    /*: string*/\n    , condition\n    /*: string*/\n    , value\n    /*: mixed*/\n    )\n    /*: ParseQuery*/\n    {\n      if (!this._where[key] || typeof this._where[key] === 'string') {\n        this._where[key] = {};\n      }\n\n      this._where[key][condition] = (0, _encode.default)(value, false, true);\n      return this;\n    }\n    /**\n     * Converts string for regular expression at the beginning\n     */\n\n  }, {\n    key: \"_regexStartWith\",\n    value: function (string\n    /*: string*/\n    )\n    /*: string*/\n    {\n      return '^' + quote(string);\n    }\n  }, {\n    key: \"_handleOfflineQuery\",\n    value: function () {\n      var _handleOfflineQuery2 = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee(params\n      /*: any*/\n      ) {\n        var _this2 = this;\n\n        var localDatastore, objects, results, keys, alwaysSelectedKeys, sorts, limit;\n        return _regenerator.default.wrap(function (_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _OfflineQuery.default.validateQuery(this);\n\n                localDatastore = _CoreManager.default.getLocalDatastore();\n                _context.next = 4;\n                return localDatastore._serializeObjectsFromPinName(this._localDatastorePinName);\n\n              case 4:\n                objects = _context.sent;\n                results = objects.map(function (json, index, arr) {\n                  var object = _ParseObject.default.fromJSON(json, false);\n\n                  if (json._localId && !json.objectId) {\n                    object._localId = json._localId;\n                  }\n\n                  if (!_OfflineQuery.default.matchesQuery(_this2.className, object, arr, _this2)) {\n                    return null;\n                  }\n\n                  return object;\n                }).filter(function (object) {\n                  return object !== null;\n                });\n\n                if (params.keys) {\n                  keys = params.keys.split(',');\n                  alwaysSelectedKeys = ['className', 'objectId', 'createdAt', 'updatedAt', 'ACL'];\n                  keys = keys.concat(alwaysSelectedKeys);\n                  results = results.map(function (object) {\n                    var json = object._toFullJSON();\n\n                    Object.keys(json).forEach(function (key) {\n                      if (!keys.includes(key)) {\n                        delete json[key];\n                      }\n                    });\n                    return _ParseObject.default.fromJSON(json, false);\n                  });\n                }\n\n                if (params.order) {\n                  sorts = params.order.split(',');\n                  results.sort(function (a, b) {\n                    return handleOfflineSort(a, b, sorts);\n                  });\n                }\n\n                if (params.skip) {\n                  if (params.skip >= results.length) {\n                    results = [];\n                  } else {\n                    results = results.splice(params.skip, results.length);\n                  }\n                }\n\n                limit = results.length;\n\n                if (params.limit !== 0 && params.limit < results.length) {\n                  limit = params.limit;\n                }\n\n                results = results.splice(0, limit);\n                return _context.abrupt(\"return\", results);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function () {\n        return _handleOfflineQuery2.apply(this, arguments);\n      };\n    }()\n    /**\n     * Returns a JSON representation of this query.\n     * @return {Object} The JSON representation of the query.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function ()\n    /*: QueryJSON*/\n    {\n      var params\n      /*: QueryJSON*/\n      = {\n        where: this._where\n      };\n\n      if (this._include.length) {\n        params.include = this._include.join(',');\n      }\n\n      if (this._select) {\n        params.keys = this._select.join(',');\n      }\n\n      if (this._limit >= 0) {\n        params.limit = this._limit;\n      }\n\n      if (this._skip > 0) {\n        params.skip = this._skip;\n      }\n\n      if (this._order) {\n        params.order = this._order.join(',');\n      }\n\n      for (var _key3 in this._extraOptions) {\n        params[_key3] = this._extraOptions[_key3];\n      }\n\n      return params;\n    }\n    /**\n     * Return a query with conditions from json, can be useful to send query from server side to client\n     * Not static, all query conditions was set before calling this method will be deleted.\n     * For example on the server side we have\n     * var query = new Parse.Query(\"className\");\n     * query.equalTo(key: value);\n     * query.limit(100);\n     * ... (others queries)\n     * Create JSON representation of Query Object\n     * var jsonFromServer = query.fromJSON();\n     *\n     * On client side getting query:\n     * var query = new Parse.Query(\"className\");\n     * query.fromJSON(jsonFromServer);\n     *\n     * and continue to query...\n     * query.skip(100).find().then(...);\n     * @param {QueryJSON} json from Parse.Query.toJSON() method\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"withJSON\",\n    value: function (json\n    /*: QueryJSON*/\n    )\n    /*: ParseQuery*/\n    {\n      if (json.where) {\n        this._where = json.where;\n      }\n\n      if (json.include) {\n        this._include = json.include.split(\",\");\n      }\n\n      if (json.keys) {\n        this._select = json.keys.split(\",\");\n      }\n\n      if (json.limit) {\n        this._limit = json.limit;\n      }\n\n      if (json.skip) {\n        this._skip = json.skip;\n      }\n\n      if (json.order) {\n        this._order = json.order.split(\",\");\n      }\n\n      for (var _key4 in json) {\n        if (json.hasOwnProperty(_key4)) {\n          if ([\"where\", \"include\", \"keys\", \"limit\", \"skip\", \"order\"].indexOf(_key4) === -1) {\n            this._extraOptions[_key4] = json[_key4];\n          }\n        }\n      }\n\n      return this;\n    }\n    /**\n       * Static method to restore Parse.Query by json representation\n       * Internally calling Parse.Query.withJSON\n       * @param {String} className\n       * @param {QueryJSON} json from Parse.Query.toJSON() method\n       * @returns {Parse.Query} new created query\n       */\n\n  }, {\n    key: \"get\",\n\n    /**\n     * Constructs a Parse.Object whose id is already known by fetching data from\n     * the server.  Either options.success or options.error is called when the\n     * find completes. Unlike the <code>first</code> method, it never returns undefined.\n     *\n     * @param {String} objectId The id of the object to be fetched.\n     * @param {Object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     * </ul>\n     *\n     * @return {Promise} A promise that is resolved with the result when\n     * the query completes.\n     */\n    value: function (objectId\n    /*: string*/\n    , options\n    /*:: ?: FullOptions*/\n    )\n    /*: Promise<ParseObject>*/\n    {\n      this.equalTo('objectId', objectId);\n      var firstOptions = {};\n\n      if (options && options.hasOwnProperty('useMasterKey')) {\n        firstOptions.useMasterKey = options.useMasterKey;\n      }\n\n      if (options && options.hasOwnProperty('sessionToken')) {\n        firstOptions.sessionToken = options.sessionToken;\n      }\n\n      return this.first(firstOptions).then(function (response) {\n        if (response) {\n          return response;\n        }\n\n        var errorObject = new _ParseError.default(_ParseError.default.OBJECT_NOT_FOUND, 'Object not found.');\n        return Promise.reject(errorObject);\n      });\n    }\n    /**\n     * Retrieves a list of ParseObjects that satisfy this query.\n     * Either options.success or options.error is called when the find\n     * completes.\n     *\n     * @param {Object} options Valid options\n     * are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     * </ul>\n     *\n     * @return {Promise} A promise that is resolved with the results when\n     * the query completes.\n     */\n\n  }, {\n    key: \"find\",\n    value: function (options\n    /*:: ?: FullOptions*/\n    )\n    /*: Promise<Array<ParseObject>>*/\n    {\n      var _this3 = this;\n\n      options = options || {};\n      var findOptions = {};\n\n      if (options.hasOwnProperty('useMasterKey')) {\n        findOptions.useMasterKey = options.useMasterKey;\n      }\n\n      if (options.hasOwnProperty('sessionToken')) {\n        findOptions.sessionToken = options.sessionToken;\n      }\n\n      var controller = _CoreManager.default.getQueryController();\n\n      var select = this._select;\n\n      if (this._queriesLocalDatastore) {\n        return this._handleOfflineQuery(this.toJSON());\n      }\n\n      return controller.find(this.className, this.toJSON(), findOptions).then(function (response) {\n        return response.results.map(function (data) {\n          // In cases of relations, the server may send back a className\n          // on the top level of the payload\n          var override = response.className || _this3.className;\n\n          if (!data.className) {\n            data.className = override;\n          } // Make sure the data object contains keys for all objects that\n          // have been requested with a select, so that our cached state\n          // updates correctly.\n\n\n          if (select) {\n            handleSelectResult(data, select);\n          }\n\n          return _ParseObject.default.fromJSON(data, !select);\n        });\n      });\n    }\n    /**\n     * Counts the number of objects that match this query.\n     * Either options.success or options.error is called when the count\n     * completes.\n     *\n     * @param {Object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     * </ul>\n     *\n     * @return {Promise} A promise that is resolved with the count when\n     * the query completes.\n     */\n\n  }, {\n    key: \"count\",\n    value: function (options\n    /*:: ?: FullOptions*/\n    )\n    /*: Promise<number>*/\n    {\n      options = options || {};\n      var findOptions = {};\n\n      if (options.hasOwnProperty('useMasterKey')) {\n        findOptions.useMasterKey = options.useMasterKey;\n      }\n\n      if (options.hasOwnProperty('sessionToken')) {\n        findOptions.sessionToken = options.sessionToken;\n      }\n\n      var controller = _CoreManager.default.getQueryController();\n\n      var params = this.toJSON();\n      params.limit = 0;\n      params.count = 1;\n      return controller.find(this.className, params, findOptions).then(function (result) {\n        return result.count;\n      });\n    }\n    /**\n     * Executes a distinct query and returns unique values\n     *\n     * @param {String} key A field to find distinct values\n     * @param {Object} options\n     * Valid options are:<ul>\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     * </ul>\n     *\n     * @return {Promise} A promise that is resolved with the query completes.\n     */\n\n  }, {\n    key: \"distinct\",\n    value: function (key\n    /*: string*/\n    , options\n    /*:: ?: FullOptions*/\n    )\n    /*: Promise<Array<mixed>>*/\n    {\n      options = options || {};\n      var distinctOptions = {};\n      distinctOptions.useMasterKey = true;\n\n      if (options.hasOwnProperty('sessionToken')) {\n        distinctOptions.sessionToken = options.sessionToken;\n      }\n\n      var controller = _CoreManager.default.getQueryController();\n\n      var params = {\n        distinct: key,\n        where: this._where\n      };\n      return controller.aggregate(this.className, params, distinctOptions).then(function (results) {\n        return results.results;\n      });\n    }\n    /**\n     * Executes an aggregate query and returns aggregate results\n     *\n     * @param {Mixed} pipeline Array or Object of stages to process query\n     * @param {Object} options Valid options are:<ul>\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     * </ul>\n     *\n     * @return {Promise} A promise that is resolved with the query completes.\n     */\n\n  }, {\n    key: \"aggregate\",\n    value: function (pipeline\n    /*: mixed*/\n    , options\n    /*:: ?: FullOptions*/\n    )\n    /*: Promise<Array<mixed>>*/\n    {\n      options = options || {};\n      var aggregateOptions = {};\n      aggregateOptions.useMasterKey = true;\n\n      if (options.hasOwnProperty('sessionToken')) {\n        aggregateOptions.sessionToken = options.sessionToken;\n      }\n\n      var controller = _CoreManager.default.getQueryController();\n\n      if (!Array.isArray(pipeline) && (0, _typeof2.default)(pipeline) !== 'object') {\n        throw new Error('Invalid pipeline must be Array or Object');\n      }\n\n      return controller.aggregate(this.className, {\n        pipeline: pipeline\n      }, aggregateOptions).then(function (results) {\n        return results.results;\n      });\n    }\n    /**\n     * Retrieves at most one Parse.Object that satisfies this query.\n     *\n     * Either options.success or options.error is called when it completes.\n     * success is passed the object if there is one. otherwise, undefined.\n     *\n     * @param {Object} options Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     * </ul>\n     *\n     * @return {Promise} A promise that is resolved with the object when\n     * the query completes.\n     */\n\n  }, {\n    key: \"first\",\n    value: function (options\n    /*:: ?: FullOptions*/\n    )\n    /*: Promise<ParseObject | void>*/\n    {\n      var _this4 = this;\n\n      options = options || {};\n      var findOptions = {};\n\n      if (options.hasOwnProperty('useMasterKey')) {\n        findOptions.useMasterKey = options.useMasterKey;\n      }\n\n      if (options.hasOwnProperty('sessionToken')) {\n        findOptions.sessionToken = options.sessionToken;\n      }\n\n      var controller = _CoreManager.default.getQueryController();\n\n      var params = this.toJSON();\n      params.limit = 1;\n      var select = this._select;\n\n      if (this._queriesLocalDatastore) {\n        return this._handleOfflineQuery(params).then(function (objects) {\n          if (!objects[0]) {\n            return undefined;\n          }\n\n          return objects[0];\n        });\n      }\n\n      return controller.find(this.className, params, findOptions).then(function (response) {\n        var objects = response.results;\n\n        if (!objects[0]) {\n          return undefined;\n        }\n\n        if (!objects[0].className) {\n          objects[0].className = _this4.className;\n        } // Make sure the data object contains keys for all objects that\n        // have been requested with a select, so that our cached state\n        // updates correctly.\n\n\n        if (select) {\n          handleSelectResult(objects[0], select);\n        }\n\n        return _ParseObject.default.fromJSON(objects[0], !select);\n      });\n    }\n    /**\n     * Iterates over each result of a query, calling a callback for each one. If\n     * the callback returns a promise, the iteration will not continue until\n     * that promise has been fulfilled. If the callback returns a rejected\n     * promise, then iteration will stop with that error. The items are\n     * processed in an unspecified order. The query may not have any sort order,\n     * and may not use limit or skip.\n     * @param {Function} callback Callback that will be called with each result\n     *     of the query.\n     * @param {Object} options Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     * </ul>\n     * @return {Promise} A promise that will be fulfilled once the\n     *     iteration has completed.\n     */\n\n  }, {\n    key: \"each\",\n    value: function (callback\n    /*: (obj: ParseObject) => any*/\n    , options\n    /*:: ?: BatchOptions*/\n    )\n    /*: Promise<Array<ParseObject>>*/\n    {\n      options = options || {};\n\n      if (this._order || this._skip || this._limit >= 0) {\n        return Promise.reject('Cannot iterate on a query with sort, skip, or limit.');\n      }\n\n      var query = new ParseQuery(this.className); // We can override the batch size from the options.\n      // This is undocumented, but useful for testing.\n\n      query._limit = options.batchSize || 100;\n      query._include = this._include.map(function (i) {\n        return i;\n      });\n\n      if (this._select) {\n        query._select = this._select.map(function (s) {\n          return s;\n        });\n      }\n\n      query._where = {};\n\n      for (var _attr in this._where) {\n        var val = this._where[_attr];\n\n        if (Array.isArray(val)) {\n          query._where[_attr] = val.map(function (v) {\n            return v;\n          });\n        } else if (val && (0, _typeof2.default)(val) === 'object') {\n          var conditionMap = {};\n          query._where[_attr] = conditionMap;\n\n          for (var cond in val) {\n            conditionMap[cond] = val[cond];\n          }\n        } else {\n          query._where[_attr] = val;\n        }\n      }\n\n      query.ascending('objectId');\n      var findOptions = {};\n\n      if (options.hasOwnProperty('useMasterKey')) {\n        findOptions.useMasterKey = options.useMasterKey;\n      }\n\n      if (options.hasOwnProperty('sessionToken')) {\n        findOptions.sessionToken = options.sessionToken;\n      }\n\n      var finished = false;\n      return (0, _promiseUtils.continueWhile)(function () {\n        return !finished;\n      }, function () {\n        return query.find(findOptions).then(function (results) {\n          var callbacksDone = Promise.resolve();\n          results.forEach(function (result) {\n            callbacksDone = callbacksDone.then(function () {\n              return callback(result);\n            });\n          });\n          return callbacksDone.then(function () {\n            if (results.length >= query._limit) {\n              query.greaterThan('objectId', results[results.length - 1].id);\n            } else {\n              finished = true;\n            }\n          });\n        });\n      });\n    }\n    /** Query Conditions **/\n\n    /**\n     * Adds a constraint to the query that requires a particular key's value to\n     * be equal to the provided value.\n     * @param {String} key The key to check.\n     * @param value The value that the Parse.Object must contain.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"equalTo\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: mixed*/\n    )\n    /*: ParseQuery*/\n    {\n      if (typeof value === 'undefined') {\n        return this.doesNotExist(key);\n      }\n\n      this._where[key] = (0, _encode.default)(value, false, true);\n      return this;\n    }\n    /**\n     * Adds a constraint to the query that requires a particular key's value to\n     * be not equal to the provided value.\n     * @param {String} key The key to check.\n     * @param value The value that must not be equalled.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"notEqualTo\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: mixed*/\n    )\n    /*: ParseQuery*/\n    {\n      return this._addCondition(key, '$ne', value);\n    }\n    /**\n     * Adds a constraint to the query that requires a particular key's value to\n     * be less than the provided value.\n     * @param {String} key The key to check.\n     * @param value The value that provides an upper bound.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"lessThan\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: mixed*/\n    )\n    /*: ParseQuery*/\n    {\n      return this._addCondition(key, '$lt', value);\n    }\n    /**\n     * Adds a constraint to the query that requires a particular key's value to\n     * be greater than the provided value.\n     * @param {String} key The key to check.\n     * @param value The value that provides an lower bound.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"greaterThan\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: mixed*/\n    )\n    /*: ParseQuery*/\n    {\n      return this._addCondition(key, '$gt', value);\n    }\n    /**\n     * Adds a constraint to the query that requires a particular key's value to\n     * be less than or equal to the provided value.\n     * @param {String} key The key to check.\n     * @param value The value that provides an upper bound.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"lessThanOrEqualTo\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: mixed*/\n    )\n    /*: ParseQuery*/\n    {\n      return this._addCondition(key, '$lte', value);\n    }\n    /**\n     * Adds a constraint to the query that requires a particular key's value to\n     * be greater than or equal to the provided value.\n     * @param {String} key The key to check.\n     * @param value The value that provides an lower bound.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"greaterThanOrEqualTo\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: mixed*/\n    )\n    /*: ParseQuery*/\n    {\n      return this._addCondition(key, '$gte', value);\n    }\n    /**\n     * Adds a constraint to the query that requires a particular key's value to\n     * be contained in the provided list of values.\n     * @param {String} key The key to check.\n     * @param {Array} values The values that will match.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"containedIn\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: mixed*/\n    )\n    /*: ParseQuery*/\n    {\n      return this._addCondition(key, '$in', value);\n    }\n    /**\n     * Adds a constraint to the query that requires a particular key's value to\n     * not be contained in the provided list of values.\n     * @param {String} key The key to check.\n     * @param {Array} values The values that will not match.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"notContainedIn\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: mixed*/\n    )\n    /*: ParseQuery*/\n    {\n      return this._addCondition(key, '$nin', value);\n    }\n    /**\n     * Adds a constraint to the query that requires a particular key's value to\n     * be contained by the provided list of values. Get objects where all array elements match.\n     * @param {String} key The key to check.\n     * @param {Array} values The values that will match.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"containedBy\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: Array<mixed>*/\n    )\n    /*: ParseQuery*/\n    {\n      return this._addCondition(key, '$containedBy', value);\n    }\n    /**\n     * Adds a constraint to the query that requires a particular key's value to\n     * contain each one of the provided list of values.\n     * @param {String} key The key to check.  This key's value must be an array.\n     * @param {Array} values The values that will match.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"containsAll\",\n    value: function (key\n    /*: string*/\n    , values\n    /*: Array<mixed>*/\n    )\n    /*: ParseQuery*/\n    {\n      return this._addCondition(key, '$all', values);\n    }\n    /**\n     * Adds a constraint to the query that requires a particular key's value to\n     * contain each one of the provided list of values starting with given strings.\n     * @param {String} key The key to check.  This key's value must be an array.\n     * @param {Array<String>} values The string values that will match as starting string.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"containsAllStartingWith\",\n    value: function (key\n    /*: string*/\n    , values\n    /*: Array<string>*/\n    )\n    /*: ParseQuery*/\n    {\n      var _this = this;\n\n      if (!Array.isArray(values)) {\n        values = [values];\n      }\n\n      var regexObject = values.map(function (value) {\n        return {\n          '$regex': _this._regexStartWith(value)\n        };\n      });\n      return this.containsAll(key, regexObject);\n    }\n    /**\n     * Adds a constraint for finding objects that contain the given key.\n     * @param {String} key The key that should exist.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"exists\",\n    value: function (key\n    /*: string*/\n    )\n    /*: ParseQuery*/\n    {\n      return this._addCondition(key, '$exists', true);\n    }\n    /**\n     * Adds a constraint for finding objects that do not contain a given key.\n     * @param {String} key The key that should not exist\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"doesNotExist\",\n    value: function (key\n    /*: string*/\n    )\n    /*: ParseQuery*/\n    {\n      return this._addCondition(key, '$exists', false);\n    }\n    /**\n     * Adds a regular expression constraint for finding string values that match\n     * the provided regular expression.\n     * This may be slow for large datasets.\n     * @param {String} key The key that the string to match is stored in.\n     * @param {RegExp} regex The regular expression pattern to match.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"matches\",\n    value: function (key\n    /*: string*/\n    , regex\n    /*: RegExp*/\n    , modifiers\n    /*: string*/\n    )\n    /*: ParseQuery*/\n    {\n      this._addCondition(key, '$regex', regex);\n\n      if (!modifiers) {\n        modifiers = '';\n      }\n\n      if (regex.ignoreCase) {\n        modifiers += 'i';\n      }\n\n      if (regex.multiline) {\n        modifiers += 'm';\n      }\n\n      if (modifiers.length) {\n        this._addCondition(key, '$options', modifiers);\n      }\n\n      return this;\n    }\n    /**\n     * Adds a constraint that requires that a key's value matches a Parse.Query\n     * constraint.\n     * @param {String} key The key that the contains the object to match the\n     *                     query.\n     * @param {Parse.Query} query The query that should match.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"matchesQuery\",\n    value: function (key\n    /*: string*/\n    , query\n    /*: ParseQuery*/\n    )\n    /*: ParseQuery*/\n    {\n      var queryJSON = query.toJSON();\n      queryJSON.className = query.className;\n      return this._addCondition(key, '$inQuery', queryJSON);\n    }\n    /**\n     * Adds a constraint that requires that a key's value not matches a\n     * Parse.Query constraint.\n     * @param {String} key The key that the contains the object to match the\n     *                     query.\n     * @param {Parse.Query} query The query that should not match.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"doesNotMatchQuery\",\n    value: function (key\n    /*: string*/\n    , query\n    /*: ParseQuery*/\n    )\n    /*: ParseQuery*/\n    {\n      var queryJSON = query.toJSON();\n      queryJSON.className = query.className;\n      return this._addCondition(key, '$notInQuery', queryJSON);\n    }\n    /**\n     * Adds a constraint that requires that a key's value matches a value in\n     * an object returned by a different Parse.Query.\n     * @param {String} key The key that contains the value that is being\n     *                     matched.\n     * @param {String} queryKey The key in the objects returned by the query to\n     *                          match against.\n     * @param {Parse.Query} query The query to run.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"matchesKeyInQuery\",\n    value: function (key\n    /*: string*/\n    , queryKey\n    /*: string*/\n    , query\n    /*: ParseQuery*/\n    )\n    /*: ParseQuery*/\n    {\n      var queryJSON = query.toJSON();\n      queryJSON.className = query.className;\n      return this._addCondition(key, '$select', {\n        key: queryKey,\n        query: queryJSON\n      });\n    }\n    /**\n     * Adds a constraint that requires that a key's value not match a value in\n     * an object returned by a different Parse.Query.\n     * @param {String} key The key that contains the value that is being\n     *                     excluded.\n     * @param {String} queryKey The key in the objects returned by the query to\n     *                          match against.\n     * @param {Parse.Query} query The query to run.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"doesNotMatchKeyInQuery\",\n    value: function (key\n    /*: string*/\n    , queryKey\n    /*: string*/\n    , query\n    /*: ParseQuery*/\n    )\n    /*: ParseQuery*/\n    {\n      var queryJSON = query.toJSON();\n      queryJSON.className = query.className;\n      return this._addCondition(key, '$dontSelect', {\n        key: queryKey,\n        query: queryJSON\n      });\n    }\n    /**\n     * Adds a constraint for finding string values that contain a provided\n     * string.  This may be slow for large datasets.\n     * @param {String} key The key that the string to match is stored in.\n     * @param {String} substring The substring that the value must contain.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"contains\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: string*/\n    )\n    /*: ParseQuery*/\n    {\n      if (typeof value !== 'string') {\n        throw new Error('The value being searched for must be a string.');\n      }\n\n      return this._addCondition(key, '$regex', quote(value));\n    }\n    /**\n    * Adds a constraint for finding string values that contain a provided\n    * string. This may be slow for large datasets. Requires Parse-Server > 2.5.0\n    *\n    * In order to sort you must use select and ascending ($score is required)\n    *  <pre>\n    *   query.fullText('field', 'term');\n    *   query.ascending('$score');\n    *   query.select('$score');\n    *  </pre>\n    *\n    * To retrieve the weight / rank\n    *  <pre>\n    *   object->get('score');\n    *  </pre>\n    *\n    * You can define optionals by providing an object as a third parameter\n    *  <pre>\n    *   query.fullText('field', 'term', { language: 'es', diacriticSensitive: true });\n    *  </pre>\n    *\n    * @param {String} key The key that the string to match is stored in.\n    * @param {String} value The string to search\n    * @param {Object} options (Optional)\n    * @param {String} options.language The language that determines the list of stop words for the search and the rules for the stemmer and tokenizer.\n    * @param {Boolean} options.caseSensitive A boolean flag to enable or disable case sensitive search.\n    * @param {Boolean} options.diacriticSensitive A boolean flag to enable or disable diacritic sensitive search.\n    * @return {Parse.Query} Returns the query, so you can chain this call.\n    */\n\n  }, {\n    key: \"fullText\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: string*/\n    , options\n    /*: ?Object*/\n    )\n    /*: ParseQuery*/\n    {\n      options = options || {};\n\n      if (!key) {\n        throw new Error('A key is required.');\n      }\n\n      if (!value) {\n        throw new Error('A search term is required');\n      }\n\n      if (typeof value !== 'string') {\n        throw new Error('The value being searched for must be a string.');\n      }\n\n      var fullOptions = {};\n      fullOptions.$term = value;\n\n      for (var option in options) {\n        switch (option) {\n          case 'language':\n            fullOptions.$language = options[option];\n            break;\n\n          case 'caseSensitive':\n            fullOptions.$caseSensitive = options[option];\n            break;\n\n          case 'diacriticSensitive':\n            fullOptions.$diacriticSensitive = options[option];\n            break;\n\n          default:\n            throw new Error(\"Unknown option: \".concat(option));\n        }\n      }\n\n      return this._addCondition(key, '$text', {\n        $search: fullOptions\n      });\n    }\n    /**\n     * Method to sort the full text search by text score\n     *\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"sortByTextScore\",\n    value: function () {\n      this.ascending('$score');\n      this.select(['$score']);\n      return this;\n    }\n    /**\n     * Adds a constraint for finding string values that start with a provided\n     * string.  This query will use the backend index, so it will be fast even\n     * for large datasets.\n     * @param {String} key The key that the string to match is stored in.\n     * @param {String} prefix The substring that the value must start with.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"startsWith\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: string*/\n    )\n    /*: ParseQuery*/\n    {\n      if (typeof value !== 'string') {\n        throw new Error('The value being searched for must be a string.');\n      }\n\n      return this._addCondition(key, '$regex', this._regexStartWith(value));\n    }\n    /**\n     * Adds a constraint for finding string values that end with a provided\n     * string.  This will be slow for large datasets.\n     * @param {String} key The key that the string to match is stored in.\n     * @param {String} suffix The substring that the value must end with.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"endsWith\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: string*/\n    )\n    /*: ParseQuery*/\n    {\n      if (typeof value !== 'string') {\n        throw new Error('The value being searched for must be a string.');\n      }\n\n      return this._addCondition(key, '$regex', quote(value) + '$');\n    }\n    /**\n     * Adds a proximity based constraint for finding objects with key point\n     * values near the point given.\n     * @param {String} key The key that the Parse.GeoPoint is stored in.\n     * @param {Parse.GeoPoint} point The reference Parse.GeoPoint that is used.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"near\",\n    value: function (key\n    /*: string*/\n    , point\n    /*: ParseGeoPoint*/\n    )\n    /*: ParseQuery*/\n    {\n      if (!(point instanceof _ParseGeoPoint.default)) {\n        // Try to cast it as a GeoPoint\n        point = new _ParseGeoPoint.default(point);\n      }\n\n      return this._addCondition(key, '$nearSphere', point);\n    }\n    /**\n     * Adds a proximity based constraint for finding objects with key point\n     * values near the point given and within the maximum distance given.\n     * @param {String} key The key that the Parse.GeoPoint is stored in.\n     * @param {Parse.GeoPoint} point The reference Parse.GeoPoint that is used.\n     * @param {Number} maxDistance Maximum distance (in radians) of results to\n     *   return.\n     * @param {Boolean} sorted A Bool value that is true if results should be\n     *   sorted by distance ascending, false is no sorting is required,\n     *   defaults to true.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"withinRadians\",\n    value: function (key\n    /*: string*/\n    , point\n    /*: ParseGeoPoint*/\n    , distance\n    /*: number*/\n    , sorted\n    /*: boolean*/\n    )\n    /*: ParseQuery*/\n    {\n      if (sorted || sorted === undefined) {\n        this.near(key, point);\n        return this._addCondition(key, '$maxDistance', distance);\n      } else {\n        return this._addCondition(key, '$geoWithin', {\n          '$centerSphere': [[point.longitude, point.latitude], distance]\n        });\n      }\n    }\n    /**\n     * Adds a proximity based constraint for finding objects with key point\n     * values near the point given and within the maximum distance given.\n     * Radius of earth used is 3958.8 miles.\n     * @param {String} key The key that the Parse.GeoPoint is stored in.\n     * @param {Parse.GeoPoint} point The reference Parse.GeoPoint that is used.\n     * @param {Number} maxDistance Maximum distance (in miles) of results to\n     *   return.\n     * @param {Boolean} sorted A Bool value that is true if results should be\n     *   sorted by distance ascending, false is no sorting is required,\n     *   defaults to true.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"withinMiles\",\n    value: function (key\n    /*: string*/\n    , point\n    /*: ParseGeoPoint*/\n    , distance\n    /*: number*/\n    , sorted\n    /*: boolean*/\n    )\n    /*: ParseQuery*/\n    {\n      return this.withinRadians(key, point, distance / 3958.8, sorted);\n    }\n    /**\n     * Adds a proximity based constraint for finding objects with key point\n     * values near the point given and within the maximum distance given.\n     * Radius of earth used is 6371.0 kilometers.\n     * @param {String} key The key that the Parse.GeoPoint is stored in.\n     * @param {Parse.GeoPoint} point The reference Parse.GeoPoint that is used.\n     * @param {Number} maxDistance Maximum distance (in kilometers) of results\n     *   to return.\n     * @param {Boolean} sorted A Bool value that is true if results should be\n     *   sorted by distance ascending, false is no sorting is required,\n     *   defaults to true.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"withinKilometers\",\n    value: function (key\n    /*: string*/\n    , point\n    /*: ParseGeoPoint*/\n    , distance\n    /*: number*/\n    , sorted\n    /*: boolean*/\n    )\n    /*: ParseQuery*/\n    {\n      return this.withinRadians(key, point, distance / 6371.0, sorted);\n    }\n    /**\n     * Adds a constraint to the query that requires a particular key's\n     * coordinates be contained within a given rectangular geographic bounding\n     * box.\n     * @param {String} key The key to be constrained.\n     * @param {Parse.GeoPoint} southwest\n     *     The lower-left inclusive corner of the box.\n     * @param {Parse.GeoPoint} northeast\n     *     The upper-right inclusive corner of the box.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"withinGeoBox\",\n    value: function (key\n    /*: string*/\n    , southwest\n    /*: ParseGeoPoint*/\n    , northeast\n    /*: ParseGeoPoint*/\n    )\n    /*: ParseQuery*/\n    {\n      if (!(southwest instanceof _ParseGeoPoint.default)) {\n        southwest = new _ParseGeoPoint.default(southwest);\n      }\n\n      if (!(northeast instanceof _ParseGeoPoint.default)) {\n        northeast = new _ParseGeoPoint.default(northeast);\n      }\n\n      this._addCondition(key, '$within', {\n        '$box': [southwest, northeast]\n      });\n\n      return this;\n    }\n    /**\n     * Adds a constraint to the query that requires a particular key's\n     * coordinates be contained within and on the bounds of a given polygon.\n     * Supports closed and open (last point is connected to first) paths\n     *\n     * Polygon must have at least 3 points\n     *\n     * @param {String} key The key to be constrained.\n     * @param {Array} array of geopoints\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"withinPolygon\",\n    value: function (key\n    /*: string*/\n    , points\n    /*: Array<Array<number>>*/\n    )\n    /*: ParseQuery*/\n    {\n      return this._addCondition(key, '$geoWithin', {\n        '$polygon': points\n      });\n    }\n    /**\n     * Add a constraint to the query that requires a particular key's\n     * coordinates that contains a ParseGeoPoint\n     *\n     * @param {String} key The key to be constrained.\n     * @param {Parse.GeoPoint} GeoPoint\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"polygonContains\",\n    value: function (key\n    /*: string*/\n    , point\n    /*: ParseGeoPoint*/\n    )\n    /*: ParseQuery*/\n    {\n      return this._addCondition(key, '$geoIntersects', {\n        '$point': point\n      });\n    }\n    /** Query Orderings **/\n\n    /**\n     * Sorts the results in ascending order by the given key.\n     *\n     * @param {(String|String[]|...String)} key The key to order by, which is a\n     * string of comma separated values, or an Array of keys, or multiple keys.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"ascending\",\n    value: function ()\n    /*: ParseQuery*/\n    {\n      this._order = [];\n\n      for (var _len = arguments.length, keys = new Array(_len), _key5 = 0; _key5 < _len; _key5++) {\n        keys[_key5] = arguments[_key5];\n      }\n\n      return this.addAscending.apply(this, keys);\n    }\n    /**\n     * Sorts the results in ascending order by the given key,\n     * but can also add secondary sort descriptors without overwriting _order.\n     *\n     * @param {(String|String[]|...String)} key The key to order by, which is a\n     * string of comma separated values, or an Array of keys, or multiple keys.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"addAscending\",\n    value: function ()\n    /*: ParseQuery*/\n    {\n      var _this5 = this;\n\n      if (!this._order) {\n        this._order = [];\n      }\n\n      for (var _len2 = arguments.length, keys = new Array(_len2), _key6 = 0; _key6 < _len2; _key6++) {\n        keys[_key6] = arguments[_key6];\n      }\n\n      keys.forEach(function (key) {\n        if (Array.isArray(key)) {\n          key = key.join();\n        }\n\n        _this5._order = _this5._order.concat(key.replace(/\\s/g, '').split(','));\n      });\n      return this;\n    }\n    /**\n     * Sorts the results in descending order by the given key.\n     *\n     * @param {(String|String[]|...String)} key The key to order by, which is a\n     * string of comma separated values, or an Array of keys, or multiple keys.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"descending\",\n    value: function ()\n    /*: ParseQuery*/\n    {\n      this._order = [];\n\n      for (var _len3 = arguments.length, keys = new Array(_len3), _key7 = 0; _key7 < _len3; _key7++) {\n        keys[_key7] = arguments[_key7];\n      }\n\n      return this.addDescending.apply(this, keys);\n    }\n    /**\n     * Sorts the results in descending order by the given key,\n     * but can also add secondary sort descriptors without overwriting _order.\n     *\n     * @param {(String|String[]|...String)} key The key to order by, which is a\n     * string of comma separated values, or an Array of keys, or multiple keys.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"addDescending\",\n    value: function ()\n    /*: ParseQuery*/\n    {\n      var _this6 = this;\n\n      if (!this._order) {\n        this._order = [];\n      }\n\n      for (var _len4 = arguments.length, keys = new Array(_len4), _key8 = 0; _key8 < _len4; _key8++) {\n        keys[_key8] = arguments[_key8];\n      }\n\n      keys.forEach(function (key) {\n        if (Array.isArray(key)) {\n          key = key.join();\n        }\n\n        _this6._order = _this6._order.concat(key.replace(/\\s/g, '').split(',').map(function (k) {\n          return '-' + k;\n        }));\n      });\n      return this;\n    }\n    /** Query Options **/\n\n    /**\n     * Sets the number of results to skip before returning any results.\n     * This is useful for pagination.\n     * Default is to skip zero results.\n     * @param {Number} n the number of results to skip.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"skip\",\n    value: function (n\n    /*: number*/\n    )\n    /*: ParseQuery*/\n    {\n      if (typeof n !== 'number' || n < 0) {\n        throw new Error('You can only skip by a positive number');\n      }\n\n      this._skip = n;\n      return this;\n    }\n    /**\n     * Sets the limit of the number of results to return. The default limit is\n     * 100, with a maximum of 1000 results being returned at a time.\n     * @param {Number} n the number of results to limit to.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"limit\",\n    value: function (n\n    /*: number*/\n    )\n    /*: ParseQuery*/\n    {\n      if (typeof n !== 'number') {\n        throw new Error('You can only set the limit to a numeric value');\n      }\n\n      this._limit = n;\n      return this;\n    }\n    /**\n     * Includes nested Parse.Objects for the provided key.  You can use dot\n     * notation to specify which fields in the included object are also fetched.\n     *\n     * You can include all nested Parse.Objects by passing in '*'.\n     * Requires Parse Server 3.0.0+\n     * <pre>query.include('*');</pre>\n     *\n     * @param {...String|Array<String>} key The name(s) of the key(s) to include.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"include\",\n    value: function ()\n    /*: ParseQuery*/\n    {\n      var _this7 = this;\n\n      for (var _len5 = arguments.length, keys = new Array(_len5), _key9 = 0; _key9 < _len5; _key9++) {\n        keys[_key9] = arguments[_key9];\n      }\n\n      keys.forEach(function (key) {\n        if (Array.isArray(key)) {\n          _this7._include = _this7._include.concat(key);\n        } else {\n          _this7._include.push(key);\n        }\n      });\n      return this;\n    }\n    /**\n     * Includes all nested Parse.Objects.\n     *\n     * Requires Parse Server 3.0.0+\n     *\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"includeAll\",\n    value: function ()\n    /*: ParseQuery*/\n    {\n      return this.include('*');\n    }\n    /**\n     * Restricts the fields of the returned Parse.Objects to include only the\n     * provided keys.  If this is called multiple times, then all of the keys\n     * specified in each of the calls will be included.\n     * @param {...String|Array<String>} keys The name(s) of the key(s) to include.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"select\",\n    value: function ()\n    /*: ParseQuery*/\n    {\n      var _this8 = this;\n\n      if (!this._select) {\n        this._select = [];\n      }\n\n      for (var _len6 = arguments.length, keys = new Array(_len6), _key10 = 0; _key10 < _len6; _key10++) {\n        keys[_key10] = arguments[_key10];\n      }\n\n      keys.forEach(function (key) {\n        if (Array.isArray(key)) {\n          _this8._select = _this8._select.concat(key);\n        } else {\n          _this8._select.push(key);\n        }\n      });\n      return this;\n    }\n    /**\n     * Subscribe this query to get liveQuery updates\n     *\n     * @param {String} sessionToken (optional) Defaults to the currentUser\n     * @return {Promise<LiveQuerySubscription>} Returns the liveQuerySubscription, it's an event emitter\n     * which can be used to get liveQuery updates.\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee2(sessionToken\n      /*:: ?: string*/\n      ) {\n        var currentUser, liveQueryClient, subscription;\n        return _regenerator.default.wrap(function (_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _CoreManager.default.getUserController().currentUserAsync();\n\n              case 2:\n                currentUser = _context2.sent;\n\n                if (!sessionToken) {\n                  sessionToken = currentUser ? currentUser.getSessionToken() : undefined;\n                }\n\n                _context2.next = 6;\n                return _CoreManager.default.getLiveQueryController().getDefaultLiveQueryClient();\n\n              case 6:\n                liveQueryClient = _context2.sent;\n\n                if (liveQueryClient.shouldOpen()) {\n                  liveQueryClient.open();\n                }\n\n                subscription = liveQueryClient.subscribe(this, sessionToken);\n                return _context2.abrupt(\"return\", subscription);\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function () {\n        return _subscribe.apply(this, arguments);\n      };\n    }()\n    /**\n     * Constructs a Parse.Query that is the OR of the passed in queries.  For\n     * example:\n     * <pre>var compoundQuery = Parse.Query.or(query1, query2, query3);</pre>\n     *\n     * will create a compoundQuery that is an or of the query1, query2, and\n     * query3.\n     * @param {...Parse.Query} var_args The list of queries to OR.\n     * @static\n     * @return {Parse.Query} The query that is the OR of the passed in queries.\n     */\n\n  }, {\n    key: \"fromLocalDatastore\",\n\n    /**\n     * Changes the source of this query to all pinned objects.\n     *\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n    value: function ()\n    /*: ParseQuery*/\n    {\n      return this.fromPinWithName(null);\n    }\n    /**\n     * Changes the source of this query to the default group of pinned objects.\n     *\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"fromPin\",\n    value: function ()\n    /*: ParseQuery*/\n    {\n      return this.fromPinWithName(_LocalDatastoreUtils.DEFAULT_PIN);\n    }\n    /**\n     * Changes the source of this query to a specific group of pinned objects.\n     *\n     * @param {String} name The name of query source.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"fromPinWithName\",\n    value: function (name\n    /*:: ?: string*/\n    )\n    /*: ParseQuery*/\n    {\n      var localDatastore = _CoreManager.default.getLocalDatastore();\n\n      if (localDatastore.checkIfEnabled()) {\n        this._queriesLocalDatastore = true;\n        this._localDatastorePinName = name;\n      }\n\n      return this;\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function (className\n    /*: string*/\n    , json\n    /*: QueryJSON*/\n    )\n    /*: ParseQuery*/\n    {\n      var query = new ParseQuery(className);\n      return query.withJSON(json);\n    }\n  }, {\n    key: \"or\",\n    value: function ()\n    /*: ParseQuery*/\n    {\n      for (var _len7 = arguments.length, queries = new Array(_len7), _key11 = 0; _key11 < _len7; _key11++) {\n        queries[_key11] = arguments[_key11];\n      }\n\n      var className = _getClassNameFromQueries(queries);\n\n      var query = new ParseQuery(className);\n\n      query._orQuery(queries);\n\n      return query;\n    }\n    /**\n     * Constructs a Parse.Query that is the AND of the passed in queries.  For\n     * example:\n     * <pre>var compoundQuery = Parse.Query.and(query1, query2, query3);</pre>\n     *\n     * will create a compoundQuery that is an and of the query1, query2, and\n     * query3.\n     * @param {...Parse.Query} var_args The list of queries to AND.\n     * @static\n     * @return {Parse.Query} The query that is the AND of the passed in queries.\n     */\n\n  }, {\n    key: \"and\",\n    value: function ()\n    /*: ParseQuery*/\n    {\n      for (var _len8 = arguments.length, queries = new Array(_len8), _key12 = 0; _key12 < _len8; _key12++) {\n        queries[_key12] = arguments[_key12];\n      }\n\n      var className = _getClassNameFromQueries(queries);\n\n      var query = new ParseQuery(className);\n\n      query._andQuery(queries);\n\n      return query;\n    }\n    /**\n     * Constructs a Parse.Query that is the NOR of the passed in queries.  For\n     * example:\n     * <pre>const compoundQuery = Parse.Query.nor(query1, query2, query3);</pre>\n     *\n     * will create a compoundQuery that is a nor of the query1, query2, and\n     * query3.\n     * @param {...Parse.Query} var_args The list of queries to NOR.\n     * @static\n     * @return {Parse.Query} The query that is the NOR of the passed in queries.\n     */\n\n  }, {\n    key: \"nor\",\n    value: function ()\n    /*: ParseQuery*/\n    {\n      for (var _len9 = arguments.length, queries = new Array(_len9), _key13 = 0; _key13 < _len9; _key13++) {\n        queries[_key13] = arguments[_key13];\n      }\n\n      var className = _getClassNameFromQueries(queries);\n\n      var query = new ParseQuery(className);\n\n      query._norQuery(queries);\n\n      return query;\n    }\n  }]);\n  return ParseQuery;\n}();\n\nvar DefaultController = {\n  find: function (className\n  /*: string*/\n  , params\n  /*: QueryJSON*/\n  , options\n  /*: RequestOptions*/\n  )\n  /*: Promise<Array<ParseObject>>*/\n  {\n    var RESTController = _CoreManager.default.getRESTController();\n\n    return RESTController.request('GET', 'classes/' + className, params, options);\n  },\n  aggregate: function (className\n  /*: string*/\n  , params\n  /*: any*/\n  , options\n  /*: RequestOptions*/\n  )\n  /*: Promise<Array<mixed>>*/\n  {\n    var RESTController = _CoreManager.default.getRESTController();\n\n    return RESTController.request('GET', 'aggregate/' + className, params, options);\n  }\n};\n\n_CoreManager.default.setQueryController(DefaultController);\n\nvar _default = ParseQuery;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":941,"column":0},"generated":{"line":941,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":942,"column":0},"generated":{"line":942,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":943,"column":0},"generated":{"line":943,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":944,"column":0},"generated":{"line":944,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":945,"column":0},"generated":{"line":945,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":946,"column":0},"generated":{"line":946,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":947,"column":0},"generated":{"line":947,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":948,"column":0},"generated":{"line":948,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":949,"column":0},"generated":{"line":949,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":950,"column":0},"generated":{"line":950,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":951,"column":0},"generated":{"line":951,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":952,"column":0},"generated":{"line":952,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":953,"column":0},"generated":{"line":953,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":954,"column":0},"generated":{"line":954,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":955,"column":0},"generated":{"line":955,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":956,"column":0},"generated":{"line":956,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":957,"column":0},"generated":{"line":957,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":958,"column":0},"generated":{"line":958,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":959,"column":0},"generated":{"line":959,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":960,"column":0},"generated":{"line":960,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":961,"column":0},"generated":{"line":961,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":962,"column":0},"generated":{"line":962,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":963,"column":0},"generated":{"line":963,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":964,"column":0},"generated":{"line":964,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":965,"column":0},"generated":{"line":965,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":966,"column":0},"generated":{"line":966,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":967,"column":0},"generated":{"line":967,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":968,"column":0},"generated":{"line":968,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":969,"column":0},"generated":{"line":969,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":970,"column":0},"generated":{"line":970,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":971,"column":0},"generated":{"line":971,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":972,"column":0},"generated":{"line":972,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":973,"column":0},"generated":{"line":973,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":974,"column":0},"generated":{"line":974,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":975,"column":0},"generated":{"line":975,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":976,"column":0},"generated":{"line":976,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":977,"column":0},"generated":{"line":977,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":978,"column":0},"generated":{"line":978,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":979,"column":0},"generated":{"line":979,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":980,"column":0},"generated":{"line":980,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":981,"column":0},"generated":{"line":981,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":982,"column":0},"generated":{"line":982,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":983,"column":0},"generated":{"line":983,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":984,"column":0},"generated":{"line":984,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":985,"column":0},"generated":{"line":985,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":986,"column":0},"generated":{"line":986,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":987,"column":0},"generated":{"line":987,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":988,"column":0},"generated":{"line":988,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":989,"column":0},"generated":{"line":989,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":990,"column":0},"generated":{"line":990,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":991,"column":0},"generated":{"line":991,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":992,"column":0},"generated":{"line":992,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":993,"column":0},"generated":{"line":993,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":994,"column":0},"generated":{"line":994,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":995,"column":0},"generated":{"line":995,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":996,"column":0},"generated":{"line":996,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":997,"column":0},"generated":{"line":997,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":998,"column":0},"generated":{"line":998,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":999,"column":0},"generated":{"line":999,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1000,"column":0},"generated":{"line":1000,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1001,"column":0},"generated":{"line":1001,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1002,"column":0},"generated":{"line":1002,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1003,"column":0},"generated":{"line":1003,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1004,"column":0},"generated":{"line":1004,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1005,"column":0},"generated":{"line":1005,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1006,"column":0},"generated":{"line":1006,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1007,"column":0},"generated":{"line":1007,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1008,"column":0},"generated":{"line":1008,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1009,"column":0},"generated":{"line":1009,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1010,"column":0},"generated":{"line":1010,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1011,"column":0},"generated":{"line":1011,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1012,"column":0},"generated":{"line":1012,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1013,"column":0},"generated":{"line":1013,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1014,"column":0},"generated":{"line":1014,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1015,"column":0},"generated":{"line":1015,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1016,"column":0},"generated":{"line":1016,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1017,"column":0},"generated":{"line":1017,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1018,"column":0},"generated":{"line":1018,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1019,"column":0},"generated":{"line":1019,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1020,"column":0},"generated":{"line":1020,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1021,"column":0},"generated":{"line":1021,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1022,"column":0},"generated":{"line":1022,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1023,"column":0},"generated":{"line":1023,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1024,"column":0},"generated":{"line":1024,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1025,"column":0},"generated":{"line":1025,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1026,"column":0},"generated":{"line":1026,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1027,"column":0},"generated":{"line":1027,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1028,"column":0},"generated":{"line":1028,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1029,"column":0},"generated":{"line":1029,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1030,"column":0},"generated":{"line":1030,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1031,"column":0},"generated":{"line":1031,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1032,"column":0},"generated":{"line":1032,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1033,"column":0},"generated":{"line":1033,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1034,"column":0},"generated":{"line":1034,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1035,"column":0},"generated":{"line":1035,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1036,"column":0},"generated":{"line":1036,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1037,"column":0},"generated":{"line":1037,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1038,"column":0},"generated":{"line":1038,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1039,"column":0},"generated":{"line":1039,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1040,"column":0},"generated":{"line":1040,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1041,"column":0},"generated":{"line":1041,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1042,"column":0},"generated":{"line":1042,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1043,"column":0},"generated":{"line":1043,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1044,"column":0},"generated":{"line":1044,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1045,"column":0},"generated":{"line":1045,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1046,"column":0},"generated":{"line":1046,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1047,"column":0},"generated":{"line":1047,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1048,"column":0},"generated":{"line":1048,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1049,"column":0},"generated":{"line":1049,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1050,"column":0},"generated":{"line":1050,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1051,"column":0},"generated":{"line":1051,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1052,"column":0},"generated":{"line":1052,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1053,"column":0},"generated":{"line":1053,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1054,"column":0},"generated":{"line":1054,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1055,"column":0},"generated":{"line":1055,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1056,"column":0},"generated":{"line":1056,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1057,"column":0},"generated":{"line":1057,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1058,"column":0},"generated":{"line":1058,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1059,"column":0},"generated":{"line":1059,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1060,"column":0},"generated":{"line":1060,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1061,"column":0},"generated":{"line":1061,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1062,"column":0},"generated":{"line":1062,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1063,"column":0},"generated":{"line":1063,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1064,"column":0},"generated":{"line":1064,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1065,"column":0},"generated":{"line":1065,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1066,"column":0},"generated":{"line":1066,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1067,"column":0},"generated":{"line":1067,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1068,"column":0},"generated":{"line":1068,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1069,"column":0},"generated":{"line":1069,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1070,"column":0},"generated":{"line":1070,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1071,"column":0},"generated":{"line":1071,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1072,"column":0},"generated":{"line":1072,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1073,"column":0},"generated":{"line":1073,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1074,"column":0},"generated":{"line":1074,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1075,"column":0},"generated":{"line":1075,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1076,"column":0},"generated":{"line":1076,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1077,"column":0},"generated":{"line":1077,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1078,"column":0},"generated":{"line":1078,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1079,"column":0},"generated":{"line":1079,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1080,"column":0},"generated":{"line":1080,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1081,"column":0},"generated":{"line":1081,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1082,"column":0},"generated":{"line":1082,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1083,"column":0},"generated":{"line":1083,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1084,"column":0},"generated":{"line":1084,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1085,"column":0},"generated":{"line":1085,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1086,"column":0},"generated":{"line":1086,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1087,"column":0},"generated":{"line":1087,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1088,"column":0},"generated":{"line":1088,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1089,"column":0},"generated":{"line":1089,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1090,"column":0},"generated":{"line":1090,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1091,"column":0},"generated":{"line":1091,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1092,"column":0},"generated":{"line":1092,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1093,"column":0},"generated":{"line":1093,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1094,"column":0},"generated":{"line":1094,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1095,"column":0},"generated":{"line":1095,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1096,"column":0},"generated":{"line":1096,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1097,"column":0},"generated":{"line":1097,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1098,"column":0},"generated":{"line":1098,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1099,"column":0},"generated":{"line":1099,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1100,"column":0},"generated":{"line":1100,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1101,"column":0},"generated":{"line":1101,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1102,"column":0},"generated":{"line":1102,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1103,"column":0},"generated":{"line":1103,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1104,"column":0},"generated":{"line":1104,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1105,"column":0},"generated":{"line":1105,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1106,"column":0},"generated":{"line":1106,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1107,"column":0},"generated":{"line":1107,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1108,"column":0},"generated":{"line":1108,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1109,"column":0},"generated":{"line":1109,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1110,"column":0},"generated":{"line":1110,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1111,"column":0},"generated":{"line":1111,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1112,"column":0},"generated":{"line":1112,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1113,"column":0},"generated":{"line":1113,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1114,"column":0},"generated":{"line":1114,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1115,"column":0},"generated":{"line":1115,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1116,"column":0},"generated":{"line":1116,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1117,"column":0},"generated":{"line":1117,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1118,"column":0},"generated":{"line":1118,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1119,"column":0},"generated":{"line":1119,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1120,"column":0},"generated":{"line":1120,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1121,"column":0},"generated":{"line":1121,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1122,"column":0},"generated":{"line":1122,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1123,"column":0},"generated":{"line":1123,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1124,"column":0},"generated":{"line":1124,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1125,"column":0},"generated":{"line":1125,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1126,"column":0},"generated":{"line":1126,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1127,"column":0},"generated":{"line":1127,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1128,"column":0},"generated":{"line":1128,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1129,"column":0},"generated":{"line":1129,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1130,"column":0},"generated":{"line":1130,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1131,"column":0},"generated":{"line":1131,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1132,"column":0},"generated":{"line":1132,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1133,"column":0},"generated":{"line":1133,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1134,"column":0},"generated":{"line":1134,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1135,"column":0},"generated":{"line":1135,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1136,"column":0},"generated":{"line":1136,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1137,"column":0},"generated":{"line":1137,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1138,"column":0},"generated":{"line":1138,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1139,"column":0},"generated":{"line":1139,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1140,"column":0},"generated":{"line":1140,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1141,"column":0},"generated":{"line":1141,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1142,"column":0},"generated":{"line":1142,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1143,"column":0},"generated":{"line":1143,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1144,"column":0},"generated":{"line":1144,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1145,"column":0},"generated":{"line":1145,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1146,"column":0},"generated":{"line":1146,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1147,"column":0},"generated":{"line":1147,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1148,"column":0},"generated":{"line":1148,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1149,"column":0},"generated":{"line":1149,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1150,"column":0},"generated":{"line":1150,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1151,"column":0},"generated":{"line":1151,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1152,"column":0},"generated":{"line":1152,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1153,"column":0},"generated":{"line":1153,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1154,"column":0},"generated":{"line":1154,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1155,"column":0},"generated":{"line":1155,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1156,"column":0},"generated":{"line":1156,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1157,"column":0},"generated":{"line":1157,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1158,"column":0},"generated":{"line":1158,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1159,"column":0},"generated":{"line":1159,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1160,"column":0},"generated":{"line":1160,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1161,"column":0},"generated":{"line":1161,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1162,"column":0},"generated":{"line":1162,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1163,"column":0},"generated":{"line":1163,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1164,"column":0},"generated":{"line":1164,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1165,"column":0},"generated":{"line":1165,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1166,"column":0},"generated":{"line":1166,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1167,"column":0},"generated":{"line":1167,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1168,"column":0},"generated":{"line":1168,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1169,"column":0},"generated":{"line":1169,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1170,"column":0},"generated":{"line":1170,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1171,"column":0},"generated":{"line":1171,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1172,"column":0},"generated":{"line":1172,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1173,"column":0},"generated":{"line":1173,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1174,"column":0},"generated":{"line":1174,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1175,"column":0},"generated":{"line":1175,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1176,"column":0},"generated":{"line":1176,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1177,"column":0},"generated":{"line":1177,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1178,"column":0},"generated":{"line":1178,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1179,"column":0},"generated":{"line":1179,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1180,"column":0},"generated":{"line":1180,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1181,"column":0},"generated":{"line":1181,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1182,"column":0},"generated":{"line":1182,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1183,"column":0},"generated":{"line":1183,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1184,"column":0},"generated":{"line":1184,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1185,"column":0},"generated":{"line":1185,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1186,"column":0},"generated":{"line":1186,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1187,"column":0},"generated":{"line":1187,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1188,"column":0},"generated":{"line":1188,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1189,"column":0},"generated":{"line":1189,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1190,"column":0},"generated":{"line":1190,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1191,"column":0},"generated":{"line":1191,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1192,"column":0},"generated":{"line":1192,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1193,"column":0},"generated":{"line":1193,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1194,"column":0},"generated":{"line":1194,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1195,"column":0},"generated":{"line":1195,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1196,"column":0},"generated":{"line":1196,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1197,"column":0},"generated":{"line":1197,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1198,"column":0},"generated":{"line":1198,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1199,"column":0},"generated":{"line":1199,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1200,"column":0},"generated":{"line":1200,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1201,"column":0},"generated":{"line":1201,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1202,"column":0},"generated":{"line":1202,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1203,"column":0},"generated":{"line":1203,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1204,"column":0},"generated":{"line":1204,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1205,"column":0},"generated":{"line":1205,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1206,"column":0},"generated":{"line":1206,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1207,"column":0},"generated":{"line":1207,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1208,"column":0},"generated":{"line":1208,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1209,"column":0},"generated":{"line":1209,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1210,"column":0},"generated":{"line":1210,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1211,"column":0},"generated":{"line":1211,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1212,"column":0},"generated":{"line":1212,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1213,"column":0},"generated":{"line":1213,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1214,"column":0},"generated":{"line":1214,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1215,"column":0},"generated":{"line":1215,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1216,"column":0},"generated":{"line":1216,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1217,"column":0},"generated":{"line":1217,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1218,"column":0},"generated":{"line":1218,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1219,"column":0},"generated":{"line":1219,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1220,"column":0},"generated":{"line":1220,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1221,"column":0},"generated":{"line":1221,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1222,"column":0},"generated":{"line":1222,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1223,"column":0},"generated":{"line":1223,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1224,"column":0},"generated":{"line":1224,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1225,"column":0},"generated":{"line":1225,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1226,"column":0},"generated":{"line":1226,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1227,"column":0},"generated":{"line":1227,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1228,"column":0},"generated":{"line":1228,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1229,"column":0},"generated":{"line":1229,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1230,"column":0},"generated":{"line":1230,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1231,"column":0},"generated":{"line":1231,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1232,"column":0},"generated":{"line":1232,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1233,"column":0},"generated":{"line":1233,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1234,"column":0},"generated":{"line":1234,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1235,"column":0},"generated":{"line":1235,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1236,"column":0},"generated":{"line":1236,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1237,"column":0},"generated":{"line":1237,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1238,"column":0},"generated":{"line":1238,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1239,"column":0},"generated":{"line":1239,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1240,"column":0},"generated":{"line":1240,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1241,"column":0},"generated":{"line":1241,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1242,"column":0},"generated":{"line":1242,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1243,"column":0},"generated":{"line":1243,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1244,"column":0},"generated":{"line":1244,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1245,"column":0},"generated":{"line":1245,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1246,"column":0},"generated":{"line":1246,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1247,"column":0},"generated":{"line":1247,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1248,"column":0},"generated":{"line":1248,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1249,"column":0},"generated":{"line":1249,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1250,"column":0},"generated":{"line":1250,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1251,"column":0},"generated":{"line":1251,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1252,"column":0},"generated":{"line":1252,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1253,"column":0},"generated":{"line":1253,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1254,"column":0},"generated":{"line":1254,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1255,"column":0},"generated":{"line":1255,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1256,"column":0},"generated":{"line":1256,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1257,"column":0},"generated":{"line":1257,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1258,"column":0},"generated":{"line":1258,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1259,"column":0},"generated":{"line":1259,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1260,"column":0},"generated":{"line":1260,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1261,"column":0},"generated":{"line":1261,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1262,"column":0},"generated":{"line":1262,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1263,"column":0},"generated":{"line":1263,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1264,"column":0},"generated":{"line":1264,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1265,"column":0},"generated":{"line":1265,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1266,"column":0},"generated":{"line":1266,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1267,"column":0},"generated":{"line":1267,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1268,"column":0},"generated":{"line":1268,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1269,"column":0},"generated":{"line":1269,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1270,"column":0},"generated":{"line":1270,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1271,"column":0},"generated":{"line":1271,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1272,"column":0},"generated":{"line":1272,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1273,"column":0},"generated":{"line":1273,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1274,"column":0},"generated":{"line":1274,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1275,"column":0},"generated":{"line":1275,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1276,"column":0},"generated":{"line":1276,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1277,"column":0},"generated":{"line":1277,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1278,"column":0},"generated":{"line":1278,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1279,"column":0},"generated":{"line":1279,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1280,"column":0},"generated":{"line":1280,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1281,"column":0},"generated":{"line":1281,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1282,"column":0},"generated":{"line":1282,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1283,"column":0},"generated":{"line":1283,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1284,"column":0},"generated":{"line":1284,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1285,"column":0},"generated":{"line":1285,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1286,"column":0},"generated":{"line":1286,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1287,"column":0},"generated":{"line":1287,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1288,"column":0},"generated":{"line":1288,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1289,"column":0},"generated":{"line":1289,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1290,"column":0},"generated":{"line":1290,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1291,"column":0},"generated":{"line":1291,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1292,"column":0},"generated":{"line":1292,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1293,"column":0},"generated":{"line":1293,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1294,"column":0},"generated":{"line":1294,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1295,"column":0},"generated":{"line":1295,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1296,"column":0},"generated":{"line":1296,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1297,"column":0},"generated":{"line":1297,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1298,"column":0},"generated":{"line":1298,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1299,"column":0},"generated":{"line":1299,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1300,"column":0},"generated":{"line":1300,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1301,"column":0},"generated":{"line":1301,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1302,"column":0},"generated":{"line":1302,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1303,"column":0},"generated":{"line":1303,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1304,"column":0},"generated":{"line":1304,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1305,"column":0},"generated":{"line":1305,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1306,"column":0},"generated":{"line":1306,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1307,"column":0},"generated":{"line":1307,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1308,"column":0},"generated":{"line":1308,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1309,"column":0},"generated":{"line":1309,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1310,"column":0},"generated":{"line":1310,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1311,"column":0},"generated":{"line":1311,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1312,"column":0},"generated":{"line":1312,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1313,"column":0},"generated":{"line":1313,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1314,"column":0},"generated":{"line":1314,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1315,"column":0},"generated":{"line":1315,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1316,"column":0},"generated":{"line":1316,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1317,"column":0},"generated":{"line":1317,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1318,"column":0},"generated":{"line":1318,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1319,"column":0},"generated":{"line":1319,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1320,"column":0},"generated":{"line":1320,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1321,"column":0},"generated":{"line":1321,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1322,"column":0},"generated":{"line":1322,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1323,"column":0},"generated":{"line":1323,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1324,"column":0},"generated":{"line":1324,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1325,"column":0},"generated":{"line":1325,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1326,"column":0},"generated":{"line":1326,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1327,"column":0},"generated":{"line":1327,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1328,"column":0},"generated":{"line":1328,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1329,"column":0},"generated":{"line":1329,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1330,"column":0},"generated":{"line":1330,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1331,"column":0},"generated":{"line":1331,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1332,"column":0},"generated":{"line":1332,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1333,"column":0},"generated":{"line":1333,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1334,"column":0},"generated":{"line":1334,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1335,"column":0},"generated":{"line":1335,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1336,"column":0},"generated":{"line":1336,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1337,"column":0},"generated":{"line":1337,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1338,"column":0},"generated":{"line":1338,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1339,"column":0},"generated":{"line":1339,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1340,"column":0},"generated":{"line":1340,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1341,"column":0},"generated":{"line":1341,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1342,"column":0},"generated":{"line":1342,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1343,"column":0},"generated":{"line":1343,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1344,"column":0},"generated":{"line":1344,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1345,"column":0},"generated":{"line":1345,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1346,"column":0},"generated":{"line":1346,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1347,"column":0},"generated":{"line":1347,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1348,"column":0},"generated":{"line":1348,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1349,"column":0},"generated":{"line":1349,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1350,"column":0},"generated":{"line":1350,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1351,"column":0},"generated":{"line":1351,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1352,"column":0},"generated":{"line":1352,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1353,"column":0},"generated":{"line":1353,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1354,"column":0},"generated":{"line":1354,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1355,"column":0},"generated":{"line":1355,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1356,"column":0},"generated":{"line":1356,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1357,"column":0},"generated":{"line":1357,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1358,"column":0},"generated":{"line":1358,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1359,"column":0},"generated":{"line":1359,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1360,"column":0},"generated":{"line":1360,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1361,"column":0},"generated":{"line":1361,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1362,"column":0},"generated":{"line":1362,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1363,"column":0},"generated":{"line":1363,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1364,"column":0},"generated":{"line":1364,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1365,"column":0},"generated":{"line":1365,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1366,"column":0},"generated":{"line":1366,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1367,"column":0},"generated":{"line":1367,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1368,"column":0},"generated":{"line":1368,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1369,"column":0},"generated":{"line":1369,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1370,"column":0},"generated":{"line":1370,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1371,"column":0},"generated":{"line":1371,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1372,"column":0},"generated":{"line":1372,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1373,"column":0},"generated":{"line":1373,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1374,"column":0},"generated":{"line":1374,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1375,"column":0},"generated":{"line":1375,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1376,"column":0},"generated":{"line":1376,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1377,"column":0},"generated":{"line":1377,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1378,"column":0},"generated":{"line":1378,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1379,"column":0},"generated":{"line":1379,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1380,"column":0},"generated":{"line":1380,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1381,"column":0},"generated":{"line":1381,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1382,"column":0},"generated":{"line":1382,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1383,"column":0},"generated":{"line":1383,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1384,"column":0},"generated":{"line":1384,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1385,"column":0},"generated":{"line":1385,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1386,"column":0},"generated":{"line":1386,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1387,"column":0},"generated":{"line":1387,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1388,"column":0},"generated":{"line":1388,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1389,"column":0},"generated":{"line":1389,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1390,"column":0},"generated":{"line":1390,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1391,"column":0},"generated":{"line":1391,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1392,"column":0},"generated":{"line":1392,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1393,"column":0},"generated":{"line":1393,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1394,"column":0},"generated":{"line":1394,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1395,"column":0},"generated":{"line":1395,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1396,"column":0},"generated":{"line":1396,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1397,"column":0},"generated":{"line":1397,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1398,"column":0},"generated":{"line":1398,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1399,"column":0},"generated":{"line":1399,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1400,"column":0},"generated":{"line":1400,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1401,"column":0},"generated":{"line":1401,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1402,"column":0},"generated":{"line":1402,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1403,"column":0},"generated":{"line":1403,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1404,"column":0},"generated":{"line":1404,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1405,"column":0},"generated":{"line":1405,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1406,"column":0},"generated":{"line":1406,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1407,"column":0},"generated":{"line":1407,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1408,"column":0},"generated":{"line":1408,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1409,"column":0},"generated":{"line":1409,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1410,"column":0},"generated":{"line":1410,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1411,"column":0},"generated":{"line":1411,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1412,"column":0},"generated":{"line":1412,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1413,"column":0},"generated":{"line":1413,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1414,"column":0},"generated":{"line":1414,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1415,"column":0},"generated":{"line":1415,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1416,"column":0},"generated":{"line":1416,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1417,"column":0},"generated":{"line":1417,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1418,"column":0},"generated":{"line":1418,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1419,"column":0},"generated":{"line":1419,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1420,"column":0},"generated":{"line":1420,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1421,"column":0},"generated":{"line":1421,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1422,"column":0},"generated":{"line":1422,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1423,"column":0},"generated":{"line":1423,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1424,"column":0},"generated":{"line":1424,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1425,"column":0},"generated":{"line":1425,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1426,"column":0},"generated":{"line":1426,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1427,"column":0},"generated":{"line":1427,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1428,"column":0},"generated":{"line":1428,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1429,"column":0},"generated":{"line":1429,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1430,"column":0},"generated":{"line":1430,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1431,"column":0},"generated":{"line":1431,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1432,"column":0},"generated":{"line":1432,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1433,"column":0},"generated":{"line":1433,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1434,"column":0},"generated":{"line":1434,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1435,"column":0},"generated":{"line":1435,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1436,"column":0},"generated":{"line":1436,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1437,"column":0},"generated":{"line":1437,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1438,"column":0},"generated":{"line":1438,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1439,"column":0},"generated":{"line":1439,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1440,"column":0},"generated":{"line":1440,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1441,"column":0},"generated":{"line":1441,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1442,"column":0},"generated":{"line":1442,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1443,"column":0},"generated":{"line":1443,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1444,"column":0},"generated":{"line":1444,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1445,"column":0},"generated":{"line":1445,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1446,"column":0},"generated":{"line":1446,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1447,"column":0},"generated":{"line":1447,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1448,"column":0},"generated":{"line":1448,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1449,"column":0},"generated":{"line":1449,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1450,"column":0},"generated":{"line":1450,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1451,"column":0},"generated":{"line":1451,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1452,"column":0},"generated":{"line":1452,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1453,"column":0},"generated":{"line":1453,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1454,"column":0},"generated":{"line":1454,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1455,"column":0},"generated":{"line":1455,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1456,"column":0},"generated":{"line":1456,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1457,"column":0},"generated":{"line":1457,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1458,"column":0},"generated":{"line":1458,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1459,"column":0},"generated":{"line":1459,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1460,"column":0},"generated":{"line":1460,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1461,"column":0},"generated":{"line":1461,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1462,"column":0},"generated":{"line":1462,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1463,"column":0},"generated":{"line":1463,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1464,"column":0},"generated":{"line":1464,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1465,"column":0},"generated":{"line":1465,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1466,"column":0},"generated":{"line":1466,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1467,"column":0},"generated":{"line":1467,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1468,"column":0},"generated":{"line":1468,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1469,"column":0},"generated":{"line":1469,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1470,"column":0},"generated":{"line":1470,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1471,"column":0},"generated":{"line":1471,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1472,"column":0},"generated":{"line":1472,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1473,"column":0},"generated":{"line":1473,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1474,"column":0},"generated":{"line":1474,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1475,"column":0},"generated":{"line":1475,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1476,"column":0},"generated":{"line":1476,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1477,"column":0},"generated":{"line":1477,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1478,"column":0},"generated":{"line":1478,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1479,"column":0},"generated":{"line":1479,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1480,"column":0},"generated":{"line":1480,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1481,"column":0},"generated":{"line":1481,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1482,"column":0},"generated":{"line":1482,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1483,"column":0},"generated":{"line":1483,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1484,"column":0},"generated":{"line":1484,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1485,"column":0},"generated":{"line":1485,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1486,"column":0},"generated":{"line":1486,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1487,"column":0},"generated":{"line":1487,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1488,"column":0},"generated":{"line":1488,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1489,"column":0},"generated":{"line":1489,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1490,"column":0},"generated":{"line":1490,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1491,"column":0},"generated":{"line":1491,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1492,"column":0},"generated":{"line":1492,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1493,"column":0},"generated":{"line":1493,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1494,"column":0},"generated":{"line":1494,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1495,"column":0},"generated":{"line":1495,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1496,"column":0},"generated":{"line":1496,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1497,"column":0},"generated":{"line":1497,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1498,"column":0},"generated":{"line":1498,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1499,"column":0},"generated":{"line":1499,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1500,"column":0},"generated":{"line":1500,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1501,"column":0},"generated":{"line":1501,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1502,"column":0},"generated":{"line":1502,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1503,"column":0},"generated":{"line":1503,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1504,"column":0},"generated":{"line":1504,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1505,"column":0},"generated":{"line":1505,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1506,"column":0},"generated":{"line":1506,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1507,"column":0},"generated":{"line":1507,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1508,"column":0},"generated":{"line":1508,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1509,"column":0},"generated":{"line":1509,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1510,"column":0},"generated":{"line":1510,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1511,"column":0},"generated":{"line":1511,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1512,"column":0},"generated":{"line":1512,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1513,"column":0},"generated":{"line":1513,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1514,"column":0},"generated":{"line":1514,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1515,"column":0},"generated":{"line":1515,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1516,"column":0},"generated":{"line":1516,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1517,"column":0},"generated":{"line":1517,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1518,"column":0},"generated":{"line":1518,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1519,"column":0},"generated":{"line":1519,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1520,"column":0},"generated":{"line":1520,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1521,"column":0},"generated":{"line":1521,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1522,"column":0},"generated":{"line":1522,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1523,"column":0},"generated":{"line":1523,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1524,"column":0},"generated":{"line":1524,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1525,"column":0},"generated":{"line":1525,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1526,"column":0},"generated":{"line":1526,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1527,"column":0},"generated":{"line":1527,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1528,"column":0},"generated":{"line":1528,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1529,"column":0},"generated":{"line":1529,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1530,"column":0},"generated":{"line":1530,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1531,"column":0},"generated":{"line":1531,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1532,"column":0},"generated":{"line":1532,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1533,"column":0},"generated":{"line":1533,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1534,"column":0},"generated":{"line":1534,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1535,"column":0},"generated":{"line":1535,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1536,"column":0},"generated":{"line":1536,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1537,"column":0},"generated":{"line":1537,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1538,"column":0},"generated":{"line":1538,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1539,"column":0},"generated":{"line":1539,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1540,"column":0},"generated":{"line":1540,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1541,"column":0},"generated":{"line":1541,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1542,"column":0},"generated":{"line":1542,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1543,"column":0},"generated":{"line":1543,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1544,"column":0},"generated":{"line":1544,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1545,"column":0},"generated":{"line":1545,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1546,"column":0},"generated":{"line":1546,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1547,"column":0},"generated":{"line":1547,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1548,"column":0},"generated":{"line":1548,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1549,"column":0},"generated":{"line":1549,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1550,"column":0},"generated":{"line":1550,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1551,"column":0},"generated":{"line":1551,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1552,"column":0},"generated":{"line":1552,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1553,"column":0},"generated":{"line":1553,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1554,"column":0},"generated":{"line":1554,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1555,"column":0},"generated":{"line":1555,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1556,"column":0},"generated":{"line":1556,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1557,"column":0},"generated":{"line":1557,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1558,"column":0},"generated":{"line":1558,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1559,"column":0},"generated":{"line":1559,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1560,"column":0},"generated":{"line":1560,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1561,"column":0},"generated":{"line":1561,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1562,"column":0},"generated":{"line":1562,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1563,"column":0},"generated":{"line":1563,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1564,"column":0},"generated":{"line":1564,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1565,"column":0},"generated":{"line":1565,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1566,"column":0},"generated":{"line":1566,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1567,"column":0},"generated":{"line":1567,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1568,"column":0},"generated":{"line":1568,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1569,"column":0},"generated":{"line":1569,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1570,"column":0},"generated":{"line":1570,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1571,"column":0},"generated":{"line":1571,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1572,"column":0},"generated":{"line":1572,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1573,"column":0},"generated":{"line":1573,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1574,"column":0},"generated":{"line":1574,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1575,"column":0},"generated":{"line":1575,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1576,"column":0},"generated":{"line":1576,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1577,"column":0},"generated":{"line":1577,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1578,"column":0},"generated":{"line":1578,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1579,"column":0},"generated":{"line":1579,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1580,"column":0},"generated":{"line":1580,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1581,"column":0},"generated":{"line":1581,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1582,"column":0},"generated":{"line":1582,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1583,"column":0},"generated":{"line":1583,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1584,"column":0},"generated":{"line":1584,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1585,"column":0},"generated":{"line":1585,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1586,"column":0},"generated":{"line":1586,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1587,"column":0},"generated":{"line":1587,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1588,"column":0},"generated":{"line":1588,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1589,"column":0},"generated":{"line":1589,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1590,"column":0},"generated":{"line":1590,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1591,"column":0},"generated":{"line":1591,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1592,"column":0},"generated":{"line":1592,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1593,"column":0},"generated":{"line":1593,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1594,"column":0},"generated":{"line":1594,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1595,"column":0},"generated":{"line":1595,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1596,"column":0},"generated":{"line":1596,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1597,"column":0},"generated":{"line":1597,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1598,"column":0},"generated":{"line":1598,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1599,"column":0},"generated":{"line":1599,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1600,"column":0},"generated":{"line":1600,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1601,"column":0},"generated":{"line":1601,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1602,"column":0},"generated":{"line":1602,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1603,"column":0},"generated":{"line":1603,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1604,"column":0},"generated":{"line":1604,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1605,"column":0},"generated":{"line":1605,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1606,"column":0},"generated":{"line":1606,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1607,"column":0},"generated":{"line":1607,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1608,"column":0},"generated":{"line":1608,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1609,"column":0},"generated":{"line":1609,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1610,"column":0},"generated":{"line":1610,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1611,"column":0},"generated":{"line":1611,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1612,"column":0},"generated":{"line":1612,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1613,"column":0},"generated":{"line":1613,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1614,"column":0},"generated":{"line":1614,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1615,"column":0},"generated":{"line":1615,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1616,"column":0},"generated":{"line":1616,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1617,"column":0},"generated":{"line":1617,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1618,"column":0},"generated":{"line":1618,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1619,"column":0},"generated":{"line":1619,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1620,"column":0},"generated":{"line":1620,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1621,"column":0},"generated":{"line":1621,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1622,"column":0},"generated":{"line":1622,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1623,"column":0},"generated":{"line":1623,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1624,"column":0},"generated":{"line":1624,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1625,"column":0},"generated":{"line":1625,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1626,"column":0},"generated":{"line":1626,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1627,"column":0},"generated":{"line":1627,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1628,"column":0},"generated":{"line":1628,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1629,"column":0},"generated":{"line":1629,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1630,"column":0},"generated":{"line":1630,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1631,"column":0},"generated":{"line":1631,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1632,"column":0},"generated":{"line":1632,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1633,"column":0},"generated":{"line":1633,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1634,"column":0},"generated":{"line":1634,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1635,"column":0},"generated":{"line":1635,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1636,"column":0},"generated":{"line":1636,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1637,"column":0},"generated":{"line":1637,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1638,"column":0},"generated":{"line":1638,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1639,"column":0},"generated":{"line":1639,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1640,"column":0},"generated":{"line":1640,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1641,"column":0},"generated":{"line":1641,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1642,"column":0},"generated":{"line":1642,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1643,"column":0},"generated":{"line":1643,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1644,"column":0},"generated":{"line":1644,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1645,"column":0},"generated":{"line":1645,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1646,"column":0},"generated":{"line":1646,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1647,"column":0},"generated":{"line":1647,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1648,"column":0},"generated":{"line":1648,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1649,"column":0},"generated":{"line":1649,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1650,"column":0},"generated":{"line":1650,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1651,"column":0},"generated":{"line":1651,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1652,"column":0},"generated":{"line":1652,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1653,"column":0},"generated":{"line":1653,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1654,"column":0},"generated":{"line":1654,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1655,"column":0},"generated":{"line":1655,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1656,"column":0},"generated":{"line":1656,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1657,"column":0},"generated":{"line":1657,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1658,"column":0},"generated":{"line":1658,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1659,"column":0},"generated":{"line":1659,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1660,"column":0},"generated":{"line":1660,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1661,"column":0},"generated":{"line":1661,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1662,"column":0},"generated":{"line":1662,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1663,"column":0},"generated":{"line":1663,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1664,"column":0},"generated":{"line":1664,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1665,"column":0},"generated":{"line":1665,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1666,"column":0},"generated":{"line":1666,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1667,"column":0},"generated":{"line":1667,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1668,"column":0},"generated":{"line":1668,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1669,"column":0},"generated":{"line":1669,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1670,"column":0},"generated":{"line":1670,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1671,"column":0},"generated":{"line":1671,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1672,"column":0},"generated":{"line":1672,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1673,"column":0},"generated":{"line":1673,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1674,"column":0},"generated":{"line":1674,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1675,"column":0},"generated":{"line":1675,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1676,"column":0},"generated":{"line":1676,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1677,"column":0},"generated":{"line":1677,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1678,"column":0},"generated":{"line":1678,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1679,"column":0},"generated":{"line":1679,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1680,"column":0},"generated":{"line":1680,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1681,"column":0},"generated":{"line":1681,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1682,"column":0},"generated":{"line":1682,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1683,"column":0},"generated":{"line":1683,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1684,"column":0},"generated":{"line":1684,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1685,"column":0},"generated":{"line":1685,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1686,"column":0},"generated":{"line":1686,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1687,"column":0},"generated":{"line":1687,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1688,"column":0},"generated":{"line":1688,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1689,"column":0},"generated":{"line":1689,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1690,"column":0},"generated":{"line":1690,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1691,"column":0},"generated":{"line":1691,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1692,"column":0},"generated":{"line":1692,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1693,"column":0},"generated":{"line":1693,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1694,"column":0},"generated":{"line":1694,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1695,"column":0},"generated":{"line":1695,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1696,"column":0},"generated":{"line":1696,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1697,"column":0},"generated":{"line":1697,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1698,"column":0},"generated":{"line":1698,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1699,"column":0},"generated":{"line":1699,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1700,"column":0},"generated":{"line":1700,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1701,"column":0},"generated":{"line":1701,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1702,"column":0},"generated":{"line":1702,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1703,"column":0},"generated":{"line":1703,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1704,"column":0},"generated":{"line":1704,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1705,"column":0},"generated":{"line":1705,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1706,"column":0},"generated":{"line":1706,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1707,"column":0},"generated":{"line":1707,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1708,"column":0},"generated":{"line":1708,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1709,"column":0},"generated":{"line":1709,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1710,"column":0},"generated":{"line":1710,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1711,"column":0},"generated":{"line":1711,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1712,"column":0},"generated":{"line":1712,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1713,"column":0},"generated":{"line":1713,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1714,"column":0},"generated":{"line":1714,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1715,"column":0},"generated":{"line":1715,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1716,"column":0},"generated":{"line":1716,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1717,"column":0},"generated":{"line":1717,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1718,"column":0},"generated":{"line":1718,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1719,"column":0},"generated":{"line":1719,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1720,"column":0},"generated":{"line":1720,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1721,"column":0},"generated":{"line":1721,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1722,"column":0},"generated":{"line":1722,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1723,"column":0},"generated":{"line":1723,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1724,"column":0},"generated":{"line":1724,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1725,"column":0},"generated":{"line":1725,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1726,"column":0},"generated":{"line":1726,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1727,"column":0},"generated":{"line":1727,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1728,"column":0},"generated":{"line":1728,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1729,"column":0},"generated":{"line":1729,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1730,"column":0},"generated":{"line":1730,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1731,"column":0},"generated":{"line":1731,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1732,"column":0},"generated":{"line":1732,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1733,"column":0},"generated":{"line":1733,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1734,"column":0},"generated":{"line":1734,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1735,"column":0},"generated":{"line":1735,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1736,"column":0},"generated":{"line":1736,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1737,"column":0},"generated":{"line":1737,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1738,"column":0},"generated":{"line":1738,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1739,"column":0},"generated":{"line":1739,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1740,"column":0},"generated":{"line":1740,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1741,"column":0},"generated":{"line":1741,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1742,"column":0},"generated":{"line":1742,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1743,"column":0},"generated":{"line":1743,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1744,"column":0},"generated":{"line":1744,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1745,"column":0},"generated":{"line":1745,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1746,"column":0},"generated":{"line":1746,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1747,"column":0},"generated":{"line":1747,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1748,"column":0},"generated":{"line":1748,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1749,"column":0},"generated":{"line":1749,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1750,"column":0},"generated":{"line":1750,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1751,"column":0},"generated":{"line":1751,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1752,"column":0},"generated":{"line":1752,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1753,"column":0},"generated":{"line":1753,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1754,"column":0},"generated":{"line":1754,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1755,"column":0},"generated":{"line":1755,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1756,"column":0},"generated":{"line":1756,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1757,"column":0},"generated":{"line":1757,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1758,"column":0},"generated":{"line":1758,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1759,"column":0},"generated":{"line":1759,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1760,"column":0},"generated":{"line":1760,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1761,"column":0},"generated":{"line":1761,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1762,"column":0},"generated":{"line":1762,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1763,"column":0},"generated":{"line":1763,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1764,"column":0},"generated":{"line":1764,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1765,"column":0},"generated":{"line":1765,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1766,"column":0},"generated":{"line":1766,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1767,"column":0},"generated":{"line":1767,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1768,"column":0},"generated":{"line":1768,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1769,"column":0},"generated":{"line":1769,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1770,"column":0},"generated":{"line":1770,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1771,"column":0},"generated":{"line":1771,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1772,"column":0},"generated":{"line":1772,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1773,"column":0},"generated":{"line":1773,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1774,"column":0},"generated":{"line":1774,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1775,"column":0},"generated":{"line":1775,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1776,"column":0},"generated":{"line":1776,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1777,"column":0},"generated":{"line":1777,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1778,"column":0},"generated":{"line":1778,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1779,"column":0},"generated":{"line":1779,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1780,"column":0},"generated":{"line":1780,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1781,"column":0},"generated":{"line":1781,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1782,"column":0},"generated":{"line":1782,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1783,"column":0},"generated":{"line":1783,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1784,"column":0},"generated":{"line":1784,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1785,"column":0},"generated":{"line":1785,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1786,"column":0},"generated":{"line":1786,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1787,"column":0},"generated":{"line":1787,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1788,"column":0},"generated":{"line":1788,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1789,"column":0},"generated":{"line":1789,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1790,"column":0},"generated":{"line":1790,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1791,"column":0},"generated":{"line":1791,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1792,"column":0},"generated":{"line":1792,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1793,"column":0},"generated":{"line":1793,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1794,"column":0},"generated":{"line":1794,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1795,"column":0},"generated":{"line":1795,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1796,"column":0},"generated":{"line":1796,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1797,"column":0},"generated":{"line":1797,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1798,"column":0},"generated":{"line":1798,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1799,"column":0},"generated":{"line":1799,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1800,"column":0},"generated":{"line":1800,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1801,"column":0},"generated":{"line":1801,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1802,"column":0},"generated":{"line":1802,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1803,"column":0},"generated":{"line":1803,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1804,"column":0},"generated":{"line":1804,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1805,"column":0},"generated":{"line":1805,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1806,"column":0},"generated":{"line":1806,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1807,"column":0},"generated":{"line":1807,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1808,"column":0},"generated":{"line":1808,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1809,"column":0},"generated":{"line":1809,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1810,"column":0},"generated":{"line":1810,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1811,"column":0},"generated":{"line":1811,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1812,"column":0},"generated":{"line":1812,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1813,"column":0},"generated":{"line":1813,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1814,"column":0},"generated":{"line":1814,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1815,"column":0},"generated":{"line":1815,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1816,"column":0},"generated":{"line":1816,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1817,"column":0},"generated":{"line":1817,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1818,"column":0},"generated":{"line":1818,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1819,"column":0},"generated":{"line":1819,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1820,"column":0},"generated":{"line":1820,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1821,"column":0},"generated":{"line":1821,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1822,"column":0},"generated":{"line":1822,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1823,"column":0},"generated":{"line":1823,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1824,"column":0},"generated":{"line":1824,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1825,"column":0},"generated":{"line":1825,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1826,"column":0},"generated":{"line":1826,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1827,"column":0},"generated":{"line":1827,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1828,"column":0},"generated":{"line":1828,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1829,"column":0},"generated":{"line":1829,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1830,"column":0},"generated":{"line":1830,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1831,"column":0},"generated":{"line":1831,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1832,"column":0},"generated":{"line":1832,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1833,"column":0},"generated":{"line":1833,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1834,"column":0},"generated":{"line":1834,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1835,"column":0},"generated":{"line":1835,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1836,"column":0},"generated":{"line":1836,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1837,"column":0},"generated":{"line":1837,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1838,"column":0},"generated":{"line":1838,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1839,"column":0},"generated":{"line":1839,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1840,"column":0},"generated":{"line":1840,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1841,"column":0},"generated":{"line":1841,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1842,"column":0},"generated":{"line":1842,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1843,"column":0},"generated":{"line":1843,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1844,"column":0},"generated":{"line":1844,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1845,"column":0},"generated":{"line":1845,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1846,"column":0},"generated":{"line":1846,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1847,"column":0},"generated":{"line":1847,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1848,"column":0},"generated":{"line":1848,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1849,"column":0},"generated":{"line":1849,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1850,"column":0},"generated":{"line":1850,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1851,"column":0},"generated":{"line":1851,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1852,"column":0},"generated":{"line":1852,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1853,"column":0},"generated":{"line":1853,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1854,"column":0},"generated":{"line":1854,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1855,"column":0},"generated":{"line":1855,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1856,"column":0},"generated":{"line":1856,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1857,"column":0},"generated":{"line":1857,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1858,"column":0},"generated":{"line":1858,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1859,"column":0},"generated":{"line":1859,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1860,"column":0},"generated":{"line":1860,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1861,"column":0},"generated":{"line":1861,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1862,"column":0},"generated":{"line":1862,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1863,"column":0},"generated":{"line":1863,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1864,"column":0},"generated":{"line":1864,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1865,"column":0},"generated":{"line":1865,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1866,"column":0},"generated":{"line":1866,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1867,"column":0},"generated":{"line":1867,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1868,"column":0},"generated":{"line":1868,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1869,"column":0},"generated":{"line":1869,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1870,"column":0},"generated":{"line":1870,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1871,"column":0},"generated":{"line":1871,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1872,"column":0},"generated":{"line":1872,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1873,"column":0},"generated":{"line":1873,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1874,"column":0},"generated":{"line":1874,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1875,"column":0},"generated":{"line":1875,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1876,"column":0},"generated":{"line":1876,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1877,"column":0},"generated":{"line":1877,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1878,"column":0},"generated":{"line":1878,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1879,"column":0},"generated":{"line":1879,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1880,"column":0},"generated":{"line":1880,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1881,"column":0},"generated":{"line":1881,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1882,"column":0},"generated":{"line":1882,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1883,"column":0},"generated":{"line":1883,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1884,"column":0},"generated":{"line":1884,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1885,"column":0},"generated":{"line":1885,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1886,"column":0},"generated":{"line":1886,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1887,"column":0},"generated":{"line":1887,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1888,"column":0},"generated":{"line":1888,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1889,"column":0},"generated":{"line":1889,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1890,"column":0},"generated":{"line":1890,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1891,"column":0},"generated":{"line":1891,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1892,"column":0},"generated":{"line":1892,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1893,"column":0},"generated":{"line":1893,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1894,"column":0},"generated":{"line":1894,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1895,"column":0},"generated":{"line":1895,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1896,"column":0},"generated":{"line":1896,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1897,"column":0},"generated":{"line":1897,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1898,"column":0},"generated":{"line":1898,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1899,"column":0},"generated":{"line":1899,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1900,"column":0},"generated":{"line":1900,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1901,"column":0},"generated":{"line":1901,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1902,"column":0},"generated":{"line":1902,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1903,"column":0},"generated":{"line":1903,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1904,"column":0},"generated":{"line":1904,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1905,"column":0},"generated":{"line":1905,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1906,"column":0},"generated":{"line":1906,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1907,"column":0},"generated":{"line":1907,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1908,"column":0},"generated":{"line":1908,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1909,"column":0},"generated":{"line":1909,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1910,"column":0},"generated":{"line":1910,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1911,"column":0},"generated":{"line":1911,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1912,"column":0},"generated":{"line":1912,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1913,"column":0},"generated":{"line":1913,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1914,"column":0},"generated":{"line":1914,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1915,"column":0},"generated":{"line":1915,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1916,"column":0},"generated":{"line":1916,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1917,"column":0},"generated":{"line":1917,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1918,"column":0},"generated":{"line":1918,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1919,"column":0},"generated":{"line":1919,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1920,"column":0},"generated":{"line":1920,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1921,"column":0},"generated":{"line":1921,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1922,"column":0},"generated":{"line":1922,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1923,"column":0},"generated":{"line":1923,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1924,"column":0},"generated":{"line":1924,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1925,"column":0},"generated":{"line":1925,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1926,"column":0},"generated":{"line":1926,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1927,"column":0},"generated":{"line":1927,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1928,"column":0},"generated":{"line":1928,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1929,"column":0},"generated":{"line":1929,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1930,"column":0},"generated":{"line":1930,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1931,"column":0},"generated":{"line":1931,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1932,"column":0},"generated":{"line":1932,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1933,"column":0},"generated":{"line":1933,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1934,"column":0},"generated":{"line":1934,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1935,"column":0},"generated":{"line":1935,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1936,"column":0},"generated":{"line":1936,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1937,"column":0},"generated":{"line":1937,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1938,"column":0},"generated":{"line":1938,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1939,"column":0},"generated":{"line":1939,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1940,"column":0},"generated":{"line":1940,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1941,"column":0},"generated":{"line":1941,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1942,"column":0},"generated":{"line":1942,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1943,"column":0},"generated":{"line":1943,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1944,"column":0},"generated":{"line":1944,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1945,"column":0},"generated":{"line":1945,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1946,"column":0},"generated":{"line":1946,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1947,"column":0},"generated":{"line":1947,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1948,"column":0},"generated":{"line":1948,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1949,"column":0},"generated":{"line":1949,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1950,"column":0},"generated":{"line":1950,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1951,"column":0},"generated":{"line":1951,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1952,"column":0},"generated":{"line":1952,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1953,"column":0},"generated":{"line":1953,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1954,"column":0},"generated":{"line":1954,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1955,"column":0},"generated":{"line":1955,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1956,"column":0},"generated":{"line":1956,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1957,"column":0},"generated":{"line":1957,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1958,"column":0},"generated":{"line":1958,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1959,"column":0},"generated":{"line":1959,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1960,"column":0},"generated":{"line":1960,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1961,"column":0},"generated":{"line":1961,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1962,"column":0},"generated":{"line":1962,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1963,"column":0},"generated":{"line":1963,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1964,"column":0},"generated":{"line":1964,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1965,"column":0},"generated":{"line":1965,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1966,"column":0},"generated":{"line":1966,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1967,"column":0},"generated":{"line":1967,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1968,"column":0},"generated":{"line":1968,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1969,"column":0},"generated":{"line":1969,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1970,"column":0},"generated":{"line":1970,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1971,"column":0},"generated":{"line":1971,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1972,"column":0},"generated":{"line":1972,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1973,"column":0},"generated":{"line":1973,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1974,"column":0},"generated":{"line":1974,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1975,"column":0},"generated":{"line":1975,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1976,"column":0},"generated":{"line":1976,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1977,"column":0},"generated":{"line":1977,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1978,"column":0},"generated":{"line":1978,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1979,"column":0},"generated":{"line":1979,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1980,"column":0},"generated":{"line":1980,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1981,"column":0},"generated":{"line":1981,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1982,"column":0},"generated":{"line":1982,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1983,"column":0},"generated":{"line":1983,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1984,"column":0},"generated":{"line":1984,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1985,"column":0},"generated":{"line":1985,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1986,"column":0},"generated":{"line":1986,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1987,"column":0},"generated":{"line":1987,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1988,"column":0},"generated":{"line":1988,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1989,"column":0},"generated":{"line":1989,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1990,"column":0},"generated":{"line":1990,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1991,"column":0},"generated":{"line":1991,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1992,"column":0},"generated":{"line":1992,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1993,"column":0},"generated":{"line":1993,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1994,"column":0},"generated":{"line":1994,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1995,"column":0},"generated":{"line":1995,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1996,"column":0},"generated":{"line":1996,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1997,"column":0},"generated":{"line":1997,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1998,"column":0},"generated":{"line":1998,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":1999,"column":0},"generated":{"line":1999,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2000,"column":0},"generated":{"line":2000,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2001,"column":0},"generated":{"line":2001,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2002,"column":0},"generated":{"line":2002,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2003,"column":0},"generated":{"line":2003,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2004,"column":0},"generated":{"line":2004,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2005,"column":0},"generated":{"line":2005,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2006,"column":0},"generated":{"line":2006,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2007,"column":0},"generated":{"line":2007,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2008,"column":0},"generated":{"line":2008,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2009,"column":0},"generated":{"line":2009,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2010,"column":0},"generated":{"line":2010,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2011,"column":0},"generated":{"line":2011,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2012,"column":0},"generated":{"line":2012,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2013,"column":0},"generated":{"line":2013,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2014,"column":0},"generated":{"line":2014,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2015,"column":0},"generated":{"line":2015,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2016,"column":0},"generated":{"line":2016,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2017,"column":0},"generated":{"line":2017,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2018,"column":0},"generated":{"line":2018,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2019,"column":0},"generated":{"line":2019,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2020,"column":0},"generated":{"line":2020,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2021,"column":0},"generated":{"line":2021,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2022,"column":0},"generated":{"line":2022,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2023,"column":0},"generated":{"line":2023,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2024,"column":0},"generated":{"line":2024,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2025,"column":0},"generated":{"line":2025,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2026,"column":0},"generated":{"line":2026,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2027,"column":0},"generated":{"line":2027,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2028,"column":0},"generated":{"line":2028,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2029,"column":0},"generated":{"line":2029,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2030,"column":0},"generated":{"line":2030,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2031,"column":0},"generated":{"line":2031,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2032,"column":0},"generated":{"line":2032,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2033,"column":0},"generated":{"line":2033,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2034,"column":0},"generated":{"line":2034,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2035,"column":0},"generated":{"line":2035,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2036,"column":0},"generated":{"line":2036,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2037,"column":0},"generated":{"line":2037,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2038,"column":0},"generated":{"line":2038,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2039,"column":0},"generated":{"line":2039,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2040,"column":0},"generated":{"line":2040,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2041,"column":0},"generated":{"line":2041,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2042,"column":0},"generated":{"line":2042,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2043,"column":0},"generated":{"line":2043,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2044,"column":0},"generated":{"line":2044,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2045,"column":0},"generated":{"line":2045,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2046,"column":0},"generated":{"line":2046,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2047,"column":0},"generated":{"line":2047,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2048,"column":0},"generated":{"line":2048,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2049,"column":0},"generated":{"line":2049,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2050,"column":0},"generated":{"line":2050,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2051,"column":0},"generated":{"line":2051,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2052,"column":0},"generated":{"line":2052,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2053,"column":0},"generated":{"line":2053,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2054,"column":0},"generated":{"line":2054,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2055,"column":0},"generated":{"line":2055,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2056,"column":0},"generated":{"line":2056,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2057,"column":0},"generated":{"line":2057,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2058,"column":0},"generated":{"line":2058,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2059,"column":0},"generated":{"line":2059,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2060,"column":0},"generated":{"line":2060,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2061,"column":0},"generated":{"line":2061,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2062,"column":0},"generated":{"line":2062,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2063,"column":0},"generated":{"line":2063,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2064,"column":0},"generated":{"line":2064,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2065,"column":0},"generated":{"line":2065,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2066,"column":0},"generated":{"line":2066,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2067,"column":0},"generated":{"line":2067,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2068,"column":0},"generated":{"line":2068,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2069,"column":0},"generated":{"line":2069,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2070,"column":0},"generated":{"line":2070,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2071,"column":0},"generated":{"line":2071,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2072,"column":0},"generated":{"line":2072,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2073,"column":0},"generated":{"line":2073,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2074,"column":0},"generated":{"line":2074,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2075,"column":0},"generated":{"line":2075,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2076,"column":0},"generated":{"line":2076,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2077,"column":0},"generated":{"line":2077,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2078,"column":0},"generated":{"line":2078,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2079,"column":0},"generated":{"line":2079,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2080,"column":0},"generated":{"line":2080,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2081,"column":0},"generated":{"line":2081,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2082,"column":0},"generated":{"line":2082,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2083,"column":0},"generated":{"line":2083,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2084,"column":0},"generated":{"line":2084,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2085,"column":0},"generated":{"line":2085,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2086,"column":0},"generated":{"line":2086,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2087,"column":0},"generated":{"line":2087,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2088,"column":0},"generated":{"line":2088,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2089,"column":0},"generated":{"line":2089,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2090,"column":0},"generated":{"line":2090,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2091,"column":0},"generated":{"line":2091,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2092,"column":0},"generated":{"line":2092,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2093,"column":0},"generated":{"line":2093,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2094,"column":0},"generated":{"line":2094,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2095,"column":0},"generated":{"line":2095,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2096,"column":0},"generated":{"line":2096,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2097,"column":0},"generated":{"line":2097,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2098,"column":0},"generated":{"line":2098,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2099,"column":0},"generated":{"line":2099,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2100,"column":0},"generated":{"line":2100,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2101,"column":0},"generated":{"line":2101,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2102,"column":0},"generated":{"line":2102,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2103,"column":0},"generated":{"line":2103,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2104,"column":0},"generated":{"line":2104,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2105,"column":0},"generated":{"line":2105,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2106,"column":0},"generated":{"line":2106,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2107,"column":0},"generated":{"line":2107,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2108,"column":0},"generated":{"line":2108,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2109,"column":0},"generated":{"line":2109,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2110,"column":0},"generated":{"line":2110,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2111,"column":0},"generated":{"line":2111,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2112,"column":0},"generated":{"line":2112,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2113,"column":0},"generated":{"line":2113,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2114,"column":0},"generated":{"line":2114,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2115,"column":0},"generated":{"line":2115,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2116,"column":0},"generated":{"line":2116,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2117,"column":0},"generated":{"line":2117,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2118,"column":0},"generated":{"line":2118,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2119,"column":0},"generated":{"line":2119,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2120,"column":0},"generated":{"line":2120,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2121,"column":0},"generated":{"line":2121,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2122,"column":0},"generated":{"line":2122,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2123,"column":0},"generated":{"line":2123,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2124,"column":0},"generated":{"line":2124,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2125,"column":0},"generated":{"line":2125,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2126,"column":0},"generated":{"line":2126,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2127,"column":0},"generated":{"line":2127,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2128,"column":0},"generated":{"line":2128,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2129,"column":0},"generated":{"line":2129,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2130,"column":0},"generated":{"line":2130,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2131,"column":0},"generated":{"line":2131,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2132,"column":0},"generated":{"line":2132,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2133,"column":0},"generated":{"line":2133,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2134,"column":0},"generated":{"line":2134,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2135,"column":0},"generated":{"line":2135,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2136,"column":0},"generated":{"line":2136,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2137,"column":0},"generated":{"line":2137,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2138,"column":0},"generated":{"line":2138,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2139,"column":0},"generated":{"line":2139,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2140,"column":0},"generated":{"line":2140,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2141,"column":0},"generated":{"line":2141,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2142,"column":0},"generated":{"line":2142,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2143,"column":0},"generated":{"line":2143,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2144,"column":0},"generated":{"line":2144,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2145,"column":0},"generated":{"line":2145,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2146,"column":0},"generated":{"line":2146,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2147,"column":0},"generated":{"line":2147,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2148,"column":0},"generated":{"line":2148,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2149,"column":0},"generated":{"line":2149,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2150,"column":0},"generated":{"line":2150,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2151,"column":0},"generated":{"line":2151,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2152,"column":0},"generated":{"line":2152,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2153,"column":0},"generated":{"line":2153,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2154,"column":0},"generated":{"line":2154,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2155,"column":0},"generated":{"line":2155,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2156,"column":0},"generated":{"line":2156,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2157,"column":0},"generated":{"line":2157,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2158,"column":0},"generated":{"line":2158,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2159,"column":0},"generated":{"line":2159,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2160,"column":0},"generated":{"line":2160,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2161,"column":0},"generated":{"line":2161,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2162,"column":0},"generated":{"line":2162,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2163,"column":0},"generated":{"line":2163,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2164,"column":0},"generated":{"line":2164,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2165,"column":0},"generated":{"line":2165,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2166,"column":0},"generated":{"line":2166,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2167,"column":0},"generated":{"line":2167,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2168,"column":0},"generated":{"line":2168,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2169,"column":0},"generated":{"line":2169,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2170,"column":0},"generated":{"line":2170,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2171,"column":0},"generated":{"line":2171,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2172,"column":0},"generated":{"line":2172,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2173,"column":0},"generated":{"line":2173,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2174,"column":0},"generated":{"line":2174,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2175,"column":0},"generated":{"line":2175,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2176,"column":0},"generated":{"line":2176,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2177,"column":0},"generated":{"line":2177,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2178,"column":0},"generated":{"line":2178,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2179,"column":0},"generated":{"line":2179,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2180,"column":0},"generated":{"line":2180,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2181,"column":0},"generated":{"line":2181,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2182,"column":0},"generated":{"line":2182,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2183,"column":0},"generated":{"line":2183,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2184,"column":0},"generated":{"line":2184,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2185,"column":0},"generated":{"line":2185,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2186,"column":0},"generated":{"line":2186,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2187,"column":0},"generated":{"line":2187,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2188,"column":0},"generated":{"line":2188,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2189,"column":0},"generated":{"line":2189,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2190,"column":0},"generated":{"line":2190,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2191,"column":0},"generated":{"line":2191,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2192,"column":0},"generated":{"line":2192,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2193,"column":0},"generated":{"line":2193,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2194,"column":0},"generated":{"line":2194,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2195,"column":0},"generated":{"line":2195,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2196,"column":0},"generated":{"line":2196,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2197,"column":0},"generated":{"line":2197,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2198,"column":0},"generated":{"line":2198,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2199,"column":0},"generated":{"line":2199,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2200,"column":0},"generated":{"line":2200,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2201,"column":0},"generated":{"line":2201,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2202,"column":0},"generated":{"line":2202,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2203,"column":0},"generated":{"line":2203,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2204,"column":0},"generated":{"line":2204,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2205,"column":0},"generated":{"line":2205,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2206,"column":0},"generated":{"line":2206,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2207,"column":0},"generated":{"line":2207,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2208,"column":0},"generated":{"line":2208,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2209,"column":0},"generated":{"line":2209,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2210,"column":0},"generated":{"line":2210,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2211,"column":0},"generated":{"line":2211,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2212,"column":0},"generated":{"line":2212,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2213,"column":0},"generated":{"line":2213,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2214,"column":0},"generated":{"line":2214,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2215,"column":0},"generated":{"line":2215,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2216,"column":0},"generated":{"line":2216,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2217,"column":0},"generated":{"line":2217,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2218,"column":0},"generated":{"line":2218,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2219,"column":0},"generated":{"line":2219,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2220,"column":0},"generated":{"line":2220,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2221,"column":0},"generated":{"line":2221,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2222,"column":0},"generated":{"line":2222,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2223,"column":0},"generated":{"line":2223,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2224,"column":0},"generated":{"line":2224,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2225,"column":0},"generated":{"line":2225,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2226,"column":0},"generated":{"line":2226,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2227,"column":0},"generated":{"line":2227,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2228,"column":0},"generated":{"line":2228,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2229,"column":0},"generated":{"line":2229,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2230,"column":0},"generated":{"line":2230,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2231,"column":0},"generated":{"line":2231,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2232,"column":0},"generated":{"line":2232,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2233,"column":0},"generated":{"line":2233,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2234,"column":0},"generated":{"line":2234,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2235,"column":0},"generated":{"line":2235,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2236,"column":0},"generated":{"line":2236,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2237,"column":0},"generated":{"line":2237,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2238,"column":0},"generated":{"line":2238,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2239,"column":0},"generated":{"line":2239,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2240,"column":0},"generated":{"line":2240,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2241,"column":0},"generated":{"line":2241,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2242,"column":0},"generated":{"line":2242,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2243,"column":0},"generated":{"line":2243,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2244,"column":0},"generated":{"line":2244,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2245,"column":0},"generated":{"line":2245,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2246,"column":0},"generated":{"line":2246,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2247,"column":0},"generated":{"line":2247,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2248,"column":0},"generated":{"line":2248,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2249,"column":0},"generated":{"line":2249,"column":0}},{"source":"node_modules/parse/lib/browser/ParseQuery.js","original":{"line":2250,"column":0},"generated":{"line":2250,"column":0}}],"sources":{"node_modules/parse/lib/browser/ParseQuery.js":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nvar _encode = _interopRequireDefault(require(\"./encode\"));\n\nvar _promiseUtils = require(\"./promiseUtils\");\n\nvar _ParseError = _interopRequireDefault(require(\"./ParseError\"));\n\nvar _ParseGeoPoint = _interopRequireDefault(require(\"./ParseGeoPoint\"));\n\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\n\nvar _OfflineQuery = _interopRequireDefault(require(\"./OfflineQuery\"));\n\nvar _LocalDatastoreUtils = require(\"./LocalDatastoreUtils\");\n/*\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n/**\n * Converts a string into a regex that matches it.\n * Surrounding with \\Q .. \\E does this, we just need to escape any \\E's in\n * the text separately.\n * @private\n */\n\n\nfunction quote(s\n/*: string*/\n) {\n  return '\\\\Q' + s.replace('\\\\E', '\\\\E\\\\\\\\E\\\\Q') + '\\\\E';\n}\n/**\n * Extracts the class name from queries. If not all queries have the same\n * class name an error will be thrown.\n */\n\n\nfunction _getClassNameFromQueries(queries\n/*: Array<ParseQuery>*/\n)\n/*: ?string*/\n{\n  var className = null;\n  queries.forEach(function (q) {\n    if (!className) {\n      className = q.className;\n    }\n\n    if (className !== q.className) {\n      throw new Error('All queries must be for the same class.');\n    }\n  });\n  return className;\n}\n/*\n * Handles pre-populating the result data of a query with select fields,\n * making sure that the data object contains keys for all objects that have\n * been requested with a select, so that our cached state updates correctly.\n */\n\n\nfunction handleSelectResult(data\n/*: any*/\n, select\n/*: Array<string>*/\n) {\n  var serverDataMask = {};\n  select.forEach(function (field) {\n    var hasSubObjectSelect = field.indexOf(\".\") !== -1;\n\n    if (!hasSubObjectSelect && !data.hasOwnProperty(field)) {\n      // this field was selected, but is missing from the retrieved data\n      data[field] = undefined;\n    } else if (hasSubObjectSelect) {\n      // this field references a sub-object,\n      // so we need to walk down the path components\n      var pathComponents = field.split(\".\");\n      var _obj = data;\n      var serverMask = serverDataMask;\n      pathComponents.forEach(function (component, index, arr) {\n        // add keys if the expected data is missing\n        if (_obj && !_obj.hasOwnProperty(component)) {\n          _obj[component] = undefined;\n        }\n\n        if (_obj !== undefined) {\n          _obj = _obj[component];\n        } //add this path component to the server mask so we can fill it in later if needed\n\n\n        if (index < arr.length - 1) {\n          if (!serverMask[component]) {\n            serverMask[component] = {};\n          }\n\n          serverMask = serverMask[component];\n        }\n      });\n    }\n  });\n\n  if (Object.keys(serverDataMask).length > 0) {\n    // When selecting from sub-objects, we don't want to blow away the missing\n    // information that we may have retrieved before. We've already added any\n    // missing selected keys to sub-objects, but we still need to add in the\n    // data for any previously retrieved sub-objects that were not selected.\n    var serverData = _CoreManager.default.getObjectStateController().getServerData({\n      id: data.objectId,\n      className: data.className\n    });\n\n    copyMissingDataWithMask(serverData, data, serverDataMask, false);\n  }\n}\n\nfunction copyMissingDataWithMask(src, dest, mask, copyThisLevel) {\n  //copy missing elements at this level\n  if (copyThisLevel) {\n    for (var _key in src) {\n      if (src.hasOwnProperty(_key) && !dest.hasOwnProperty(_key)) {\n        dest[_key] = src[_key];\n      }\n    }\n  }\n\n  for (var _key2 in mask) {\n    if (dest[_key2] !== undefined && dest[_key2] !== null && src !== undefined && src !== null) {\n      //traverse into objects as needed\n      copyMissingDataWithMask(src[_key2], dest[_key2], mask[_key2], true);\n    }\n  }\n}\n\nfunction handleOfflineSort(a, b, sorts) {\n  var order = sorts[0];\n  var operator = order.slice(0, 1);\n  var isDescending = operator === '-';\n\n  if (isDescending) {\n    order = order.substring(1);\n  }\n\n  if (order === '_created_at') {\n    order = 'createdAt';\n  }\n\n  if (order === '_updated_at') {\n    order = 'updatedAt';\n  }\n\n  if (!/^[A-Za-z][0-9A-Za-z_]*$/.test(order) || order === 'password') {\n    throw new _ParseError.default(_ParseError.default.INVALID_KEY_NAME, \"Invalid Key: \".concat(order));\n  }\n\n  var field1 = a.get(order);\n  var field2 = b.get(order);\n\n  if (field1 < field2) {\n    return isDescending ? 1 : -1;\n  }\n\n  if (field1 > field2) {\n    return isDescending ? -1 : 1;\n  }\n\n  if (sorts.length > 1) {\n    var remainingSorts = sorts.slice(1);\n    return handleOfflineSort(a, b, remainingSorts);\n  }\n\n  return 0;\n}\n/**\n * Creates a new parse Parse.Query for the given Parse.Object subclass.\n *\n * <p>Parse.Query defines a query that is used to fetch Parse.Objects. The\n * most common use case is finding all objects that match a query through the\n * <code>find</code> method. for example, this sample code fetches all objects\n * of class <code>myclass</code>. it calls a different function depending on\n * whether the fetch succeeded or not.\n *\n * <pre>\n * var query = new Parse.Query(myclass);\n * query.find().then((results) => {\n *   // results is an array of parse.object.\n * }).catch((error) =>  {\n *  // error is an instance of parse.error.\n * });</pre></p>\n *\n * <p>a Parse.Query can also be used to retrieve a single object whose id is\n * known, through the get method. for example, this sample code fetches an\n * object of class <code>myclass</code> and id <code>myid</code>. it calls a\n * different function depending on whether the fetch succeeded or not.\n *\n * <pre>\n * var query = new Parse.Query(myclass);\n * query.get(myid).then((object) => {\n *     // object is an instance of parse.object.\n * }).catch((error) =>  {\n *  // error is an instance of parse.error.\n * });</pre></p>\n *\n * <p>a Parse.Query can also be used to count the number of objects that match\n * the query without retrieving all of those objects. for example, this\n * sample code counts the number of objects of the class <code>myclass</code>\n * <pre>\n * var query = new Parse.Query(myclass);\n * query.count().then((number) => {\n *     // there are number instances of myclass.\n * }).catch((error) => {\n *     // error is an instance of Parse.Error.\n * });</pre></p>\n * @alias Parse.Query\n */\n\n\nvar ParseQuery =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @property className\n   * @type String\n   */\n\n  /**\n   * @param {(String|Parse.Object)} objectClass An instance of a subclass of Parse.Object, or a Parse className string.\n   */\n  function ParseQuery(objectClass\n  /*: string | ParseObject*/\n  ) {\n    (0, _classCallCheck2.default)(this, ParseQuery);\n    (0, _defineProperty2.default)(this, \"className\", void 0);\n    (0, _defineProperty2.default)(this, \"_where\", void 0);\n    (0, _defineProperty2.default)(this, \"_include\", void 0);\n    (0, _defineProperty2.default)(this, \"_select\", void 0);\n    (0, _defineProperty2.default)(this, \"_limit\", void 0);\n    (0, _defineProperty2.default)(this, \"_skip\", void 0);\n    (0, _defineProperty2.default)(this, \"_order\", void 0);\n    (0, _defineProperty2.default)(this, \"_queriesLocalDatastore\", void 0);\n    (0, _defineProperty2.default)(this, \"_localDatastorePinName\", void 0);\n    (0, _defineProperty2.default)(this, \"_extraOptions\", void 0);\n\n    if (typeof objectClass === 'string') {\n      if (objectClass === 'User' && _CoreManager.default.get('PERFORM_USER_REWRITE')) {\n        this.className = '_User';\n      } else {\n        this.className = objectClass;\n      }\n    } else if (objectClass instanceof _ParseObject.default) {\n      this.className = objectClass.className;\n    } else if (typeof objectClass === 'function') {\n      if (typeof objectClass.className === 'string') {\n        this.className = objectClass.className;\n      } else {\n        var _obj2 = new objectClass();\n\n        this.className = _obj2.className;\n      }\n    } else {\n      throw new TypeError('A ParseQuery must be constructed with a ParseObject or class name.');\n    }\n\n    this._where = {};\n    this._include = [];\n    this._limit = -1; // negative limit is not sent in the server request\n\n    this._skip = 0;\n    this._queriesLocalDatastore = false;\n    this._localDatastorePinName = null;\n    this._extraOptions = {};\n  }\n  /**\n   * Adds constraint that at least one of the passed in queries matches.\n   * @param {Array} queries\n   * @return {Parse.Query} Returns the query, so you can chain this call.\n   */\n\n\n  (0, _createClass2.default)(ParseQuery, [{\n    key: \"_orQuery\",\n    value: function (queries\n    /*: Array<ParseQuery>*/\n    )\n    /*: ParseQuery*/\n    {\n      var queryJSON = queries.map(function (q) {\n        return q.toJSON().where;\n      });\n      this._where.$or = queryJSON;\n      return this;\n    }\n    /**\n     * Adds constraint that all of the passed in queries match.\n     * @param {Array} queries\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"_andQuery\",\n    value: function (queries\n    /*: Array<ParseQuery>*/\n    )\n    /*: ParseQuery*/\n    {\n      var queryJSON = queries.map(function (q) {\n        return q.toJSON().where;\n      });\n      this._where.$and = queryJSON;\n      return this;\n    }\n    /**\n     * Adds constraint that none of the passed in queries match.\n     * @param {Array} queries\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"_norQuery\",\n    value: function (queries\n    /*: Array<ParseQuery>*/\n    )\n    /*: ParseQuery*/\n    {\n      var queryJSON = queries.map(function (q) {\n        return q.toJSON().where;\n      });\n      this._where.$nor = queryJSON;\n      return this;\n    }\n    /**\n     * Helper for condition queries\n     */\n\n  }, {\n    key: \"_addCondition\",\n    value: function (key\n    /*: string*/\n    , condition\n    /*: string*/\n    , value\n    /*: mixed*/\n    )\n    /*: ParseQuery*/\n    {\n      if (!this._where[key] || typeof this._where[key] === 'string') {\n        this._where[key] = {};\n      }\n\n      this._where[key][condition] = (0, _encode.default)(value, false, true);\n      return this;\n    }\n    /**\n     * Converts string for regular expression at the beginning\n     */\n\n  }, {\n    key: \"_regexStartWith\",\n    value: function (string\n    /*: string*/\n    )\n    /*: string*/\n    {\n      return '^' + quote(string);\n    }\n  }, {\n    key: \"_handleOfflineQuery\",\n    value: function () {\n      var _handleOfflineQuery2 = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee(params\n      /*: any*/\n      ) {\n        var _this2 = this;\n\n        var localDatastore, objects, results, keys, alwaysSelectedKeys, sorts, limit;\n        return _regenerator.default.wrap(function (_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _OfflineQuery.default.validateQuery(this);\n\n                localDatastore = _CoreManager.default.getLocalDatastore();\n                _context.next = 4;\n                return localDatastore._serializeObjectsFromPinName(this._localDatastorePinName);\n\n              case 4:\n                objects = _context.sent;\n                results = objects.map(function (json, index, arr) {\n                  var object = _ParseObject.default.fromJSON(json, false);\n\n                  if (json._localId && !json.objectId) {\n                    object._localId = json._localId;\n                  }\n\n                  if (!_OfflineQuery.default.matchesQuery(_this2.className, object, arr, _this2)) {\n                    return null;\n                  }\n\n                  return object;\n                }).filter(function (object) {\n                  return object !== null;\n                });\n\n                if (params.keys) {\n                  keys = params.keys.split(',');\n                  alwaysSelectedKeys = ['className', 'objectId', 'createdAt', 'updatedAt', 'ACL'];\n                  keys = keys.concat(alwaysSelectedKeys);\n                  results = results.map(function (object) {\n                    var json = object._toFullJSON();\n\n                    Object.keys(json).forEach(function (key) {\n                      if (!keys.includes(key)) {\n                        delete json[key];\n                      }\n                    });\n                    return _ParseObject.default.fromJSON(json, false);\n                  });\n                }\n\n                if (params.order) {\n                  sorts = params.order.split(',');\n                  results.sort(function (a, b) {\n                    return handleOfflineSort(a, b, sorts);\n                  });\n                }\n\n                if (params.skip) {\n                  if (params.skip >= results.length) {\n                    results = [];\n                  } else {\n                    results = results.splice(params.skip, results.length);\n                  }\n                }\n\n                limit = results.length;\n\n                if (params.limit !== 0 && params.limit < results.length) {\n                  limit = params.limit;\n                }\n\n                results = results.splice(0, limit);\n                return _context.abrupt(\"return\", results);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function () {\n        return _handleOfflineQuery2.apply(this, arguments);\n      };\n    }()\n    /**\n     * Returns a JSON representation of this query.\n     * @return {Object} The JSON representation of the query.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function ()\n    /*: QueryJSON*/\n    {\n      var params\n      /*: QueryJSON*/\n      = {\n        where: this._where\n      };\n\n      if (this._include.length) {\n        params.include = this._include.join(',');\n      }\n\n      if (this._select) {\n        params.keys = this._select.join(',');\n      }\n\n      if (this._limit >= 0) {\n        params.limit = this._limit;\n      }\n\n      if (this._skip > 0) {\n        params.skip = this._skip;\n      }\n\n      if (this._order) {\n        params.order = this._order.join(',');\n      }\n\n      for (var _key3 in this._extraOptions) {\n        params[_key3] = this._extraOptions[_key3];\n      }\n\n      return params;\n    }\n    /**\n     * Return a query with conditions from json, can be useful to send query from server side to client\n     * Not static, all query conditions was set before calling this method will be deleted.\n     * For example on the server side we have\n     * var query = new Parse.Query(\"className\");\n     * query.equalTo(key: value);\n     * query.limit(100);\n     * ... (others queries)\n     * Create JSON representation of Query Object\n     * var jsonFromServer = query.fromJSON();\n     *\n     * On client side getting query:\n     * var query = new Parse.Query(\"className\");\n     * query.fromJSON(jsonFromServer);\n     *\n     * and continue to query...\n     * query.skip(100).find().then(...);\n     * @param {QueryJSON} json from Parse.Query.toJSON() method\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"withJSON\",\n    value: function (json\n    /*: QueryJSON*/\n    )\n    /*: ParseQuery*/\n    {\n      if (json.where) {\n        this._where = json.where;\n      }\n\n      if (json.include) {\n        this._include = json.include.split(\",\");\n      }\n\n      if (json.keys) {\n        this._select = json.keys.split(\",\");\n      }\n\n      if (json.limit) {\n        this._limit = json.limit;\n      }\n\n      if (json.skip) {\n        this._skip = json.skip;\n      }\n\n      if (json.order) {\n        this._order = json.order.split(\",\");\n      }\n\n      for (var _key4 in json) {\n        if (json.hasOwnProperty(_key4)) {\n          if ([\"where\", \"include\", \"keys\", \"limit\", \"skip\", \"order\"].indexOf(_key4) === -1) {\n            this._extraOptions[_key4] = json[_key4];\n          }\n        }\n      }\n\n      return this;\n    }\n    /**\n       * Static method to restore Parse.Query by json representation\n       * Internally calling Parse.Query.withJSON\n       * @param {String} className\n       * @param {QueryJSON} json from Parse.Query.toJSON() method\n       * @returns {Parse.Query} new created query\n       */\n\n  }, {\n    key: \"get\",\n\n    /**\n     * Constructs a Parse.Object whose id is already known by fetching data from\n     * the server.  Either options.success or options.error is called when the\n     * find completes. Unlike the <code>first</code> method, it never returns undefined.\n     *\n     * @param {String} objectId The id of the object to be fetched.\n     * @param {Object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     * </ul>\n     *\n     * @return {Promise} A promise that is resolved with the result when\n     * the query completes.\n     */\n    value: function (objectId\n    /*: string*/\n    , options\n    /*:: ?: FullOptions*/\n    )\n    /*: Promise<ParseObject>*/\n    {\n      this.equalTo('objectId', objectId);\n      var firstOptions = {};\n\n      if (options && options.hasOwnProperty('useMasterKey')) {\n        firstOptions.useMasterKey = options.useMasterKey;\n      }\n\n      if (options && options.hasOwnProperty('sessionToken')) {\n        firstOptions.sessionToken = options.sessionToken;\n      }\n\n      return this.first(firstOptions).then(function (response) {\n        if (response) {\n          return response;\n        }\n\n        var errorObject = new _ParseError.default(_ParseError.default.OBJECT_NOT_FOUND, 'Object not found.');\n        return Promise.reject(errorObject);\n      });\n    }\n    /**\n     * Retrieves a list of ParseObjects that satisfy this query.\n     * Either options.success or options.error is called when the find\n     * completes.\n     *\n     * @param {Object} options Valid options\n     * are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     * </ul>\n     *\n     * @return {Promise} A promise that is resolved with the results when\n     * the query completes.\n     */\n\n  }, {\n    key: \"find\",\n    value: function (options\n    /*:: ?: FullOptions*/\n    )\n    /*: Promise<Array<ParseObject>>*/\n    {\n      var _this3 = this;\n\n      options = options || {};\n      var findOptions = {};\n\n      if (options.hasOwnProperty('useMasterKey')) {\n        findOptions.useMasterKey = options.useMasterKey;\n      }\n\n      if (options.hasOwnProperty('sessionToken')) {\n        findOptions.sessionToken = options.sessionToken;\n      }\n\n      var controller = _CoreManager.default.getQueryController();\n\n      var select = this._select;\n\n      if (this._queriesLocalDatastore) {\n        return this._handleOfflineQuery(this.toJSON());\n      }\n\n      return controller.find(this.className, this.toJSON(), findOptions).then(function (response) {\n        return response.results.map(function (data) {\n          // In cases of relations, the server may send back a className\n          // on the top level of the payload\n          var override = response.className || _this3.className;\n\n          if (!data.className) {\n            data.className = override;\n          } // Make sure the data object contains keys for all objects that\n          // have been requested with a select, so that our cached state\n          // updates correctly.\n\n\n          if (select) {\n            handleSelectResult(data, select);\n          }\n\n          return _ParseObject.default.fromJSON(data, !select);\n        });\n      });\n    }\n    /**\n     * Counts the number of objects that match this query.\n     * Either options.success or options.error is called when the count\n     * completes.\n     *\n     * @param {Object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     * </ul>\n     *\n     * @return {Promise} A promise that is resolved with the count when\n     * the query completes.\n     */\n\n  }, {\n    key: \"count\",\n    value: function (options\n    /*:: ?: FullOptions*/\n    )\n    /*: Promise<number>*/\n    {\n      options = options || {};\n      var findOptions = {};\n\n      if (options.hasOwnProperty('useMasterKey')) {\n        findOptions.useMasterKey = options.useMasterKey;\n      }\n\n      if (options.hasOwnProperty('sessionToken')) {\n        findOptions.sessionToken = options.sessionToken;\n      }\n\n      var controller = _CoreManager.default.getQueryController();\n\n      var params = this.toJSON();\n      params.limit = 0;\n      params.count = 1;\n      return controller.find(this.className, params, findOptions).then(function (result) {\n        return result.count;\n      });\n    }\n    /**\n     * Executes a distinct query and returns unique values\n     *\n     * @param {String} key A field to find distinct values\n     * @param {Object} options\n     * Valid options are:<ul>\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     * </ul>\n     *\n     * @return {Promise} A promise that is resolved with the query completes.\n     */\n\n  }, {\n    key: \"distinct\",\n    value: function (key\n    /*: string*/\n    , options\n    /*:: ?: FullOptions*/\n    )\n    /*: Promise<Array<mixed>>*/\n    {\n      options = options || {};\n      var distinctOptions = {};\n      distinctOptions.useMasterKey = true;\n\n      if (options.hasOwnProperty('sessionToken')) {\n        distinctOptions.sessionToken = options.sessionToken;\n      }\n\n      var controller = _CoreManager.default.getQueryController();\n\n      var params = {\n        distinct: key,\n        where: this._where\n      };\n      return controller.aggregate(this.className, params, distinctOptions).then(function (results) {\n        return results.results;\n      });\n    }\n    /**\n     * Executes an aggregate query and returns aggregate results\n     *\n     * @param {Mixed} pipeline Array or Object of stages to process query\n     * @param {Object} options Valid options are:<ul>\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     * </ul>\n     *\n     * @return {Promise} A promise that is resolved with the query completes.\n     */\n\n  }, {\n    key: \"aggregate\",\n    value: function (pipeline\n    /*: mixed*/\n    , options\n    /*:: ?: FullOptions*/\n    )\n    /*: Promise<Array<mixed>>*/\n    {\n      options = options || {};\n      var aggregateOptions = {};\n      aggregateOptions.useMasterKey = true;\n\n      if (options.hasOwnProperty('sessionToken')) {\n        aggregateOptions.sessionToken = options.sessionToken;\n      }\n\n      var controller = _CoreManager.default.getQueryController();\n\n      if (!Array.isArray(pipeline) && (0, _typeof2.default)(pipeline) !== 'object') {\n        throw new Error('Invalid pipeline must be Array or Object');\n      }\n\n      return controller.aggregate(this.className, {\n        pipeline: pipeline\n      }, aggregateOptions).then(function (results) {\n        return results.results;\n      });\n    }\n    /**\n     * Retrieves at most one Parse.Object that satisfies this query.\n     *\n     * Either options.success or options.error is called when it completes.\n     * success is passed the object if there is one. otherwise, undefined.\n     *\n     * @param {Object} options Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     * </ul>\n     *\n     * @return {Promise} A promise that is resolved with the object when\n     * the query completes.\n     */\n\n  }, {\n    key: \"first\",\n    value: function (options\n    /*:: ?: FullOptions*/\n    )\n    /*: Promise<ParseObject | void>*/\n    {\n      var _this4 = this;\n\n      options = options || {};\n      var findOptions = {};\n\n      if (options.hasOwnProperty('useMasterKey')) {\n        findOptions.useMasterKey = options.useMasterKey;\n      }\n\n      if (options.hasOwnProperty('sessionToken')) {\n        findOptions.sessionToken = options.sessionToken;\n      }\n\n      var controller = _CoreManager.default.getQueryController();\n\n      var params = this.toJSON();\n      params.limit = 1;\n      var select = this._select;\n\n      if (this._queriesLocalDatastore) {\n        return this._handleOfflineQuery(params).then(function (objects) {\n          if (!objects[0]) {\n            return undefined;\n          }\n\n          return objects[0];\n        });\n      }\n\n      return controller.find(this.className, params, findOptions).then(function (response) {\n        var objects = response.results;\n\n        if (!objects[0]) {\n          return undefined;\n        }\n\n        if (!objects[0].className) {\n          objects[0].className = _this4.className;\n        } // Make sure the data object contains keys for all objects that\n        // have been requested with a select, so that our cached state\n        // updates correctly.\n\n\n        if (select) {\n          handleSelectResult(objects[0], select);\n        }\n\n        return _ParseObject.default.fromJSON(objects[0], !select);\n      });\n    }\n    /**\n     * Iterates over each result of a query, calling a callback for each one. If\n     * the callback returns a promise, the iteration will not continue until\n     * that promise has been fulfilled. If the callback returns a rejected\n     * promise, then iteration will stop with that error. The items are\n     * processed in an unspecified order. The query may not have any sort order,\n     * and may not use limit or skip.\n     * @param {Function} callback Callback that will be called with each result\n     *     of the query.\n     * @param {Object} options Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     * </ul>\n     * @return {Promise} A promise that will be fulfilled once the\n     *     iteration has completed.\n     */\n\n  }, {\n    key: \"each\",\n    value: function (callback\n    /*: (obj: ParseObject) => any*/\n    , options\n    /*:: ?: BatchOptions*/\n    )\n    /*: Promise<Array<ParseObject>>*/\n    {\n      options = options || {};\n\n      if (this._order || this._skip || this._limit >= 0) {\n        return Promise.reject('Cannot iterate on a query with sort, skip, or limit.');\n      }\n\n      var query = new ParseQuery(this.className); // We can override the batch size from the options.\n      // This is undocumented, but useful for testing.\n\n      query._limit = options.batchSize || 100;\n      query._include = this._include.map(function (i) {\n        return i;\n      });\n\n      if (this._select) {\n        query._select = this._select.map(function (s) {\n          return s;\n        });\n      }\n\n      query._where = {};\n\n      for (var _attr in this._where) {\n        var val = this._where[_attr];\n\n        if (Array.isArray(val)) {\n          query._where[_attr] = val.map(function (v) {\n            return v;\n          });\n        } else if (val && (0, _typeof2.default)(val) === 'object') {\n          var conditionMap = {};\n          query._where[_attr] = conditionMap;\n\n          for (var cond in val) {\n            conditionMap[cond] = val[cond];\n          }\n        } else {\n          query._where[_attr] = val;\n        }\n      }\n\n      query.ascending('objectId');\n      var findOptions = {};\n\n      if (options.hasOwnProperty('useMasterKey')) {\n        findOptions.useMasterKey = options.useMasterKey;\n      }\n\n      if (options.hasOwnProperty('sessionToken')) {\n        findOptions.sessionToken = options.sessionToken;\n      }\n\n      var finished = false;\n      return (0, _promiseUtils.continueWhile)(function () {\n        return !finished;\n      }, function () {\n        return query.find(findOptions).then(function (results) {\n          var callbacksDone = Promise.resolve();\n          results.forEach(function (result) {\n            callbacksDone = callbacksDone.then(function () {\n              return callback(result);\n            });\n          });\n          return callbacksDone.then(function () {\n            if (results.length >= query._limit) {\n              query.greaterThan('objectId', results[results.length - 1].id);\n            } else {\n              finished = true;\n            }\n          });\n        });\n      });\n    }\n    /** Query Conditions **/\n\n    /**\n     * Adds a constraint to the query that requires a particular key's value to\n     * be equal to the provided value.\n     * @param {String} key The key to check.\n     * @param value The value that the Parse.Object must contain.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"equalTo\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: mixed*/\n    )\n    /*: ParseQuery*/\n    {\n      if (typeof value === 'undefined') {\n        return this.doesNotExist(key);\n      }\n\n      this._where[key] = (0, _encode.default)(value, false, true);\n      return this;\n    }\n    /**\n     * Adds a constraint to the query that requires a particular key's value to\n     * be not equal to the provided value.\n     * @param {String} key The key to check.\n     * @param value The value that must not be equalled.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"notEqualTo\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: mixed*/\n    )\n    /*: ParseQuery*/\n    {\n      return this._addCondition(key, '$ne', value);\n    }\n    /**\n     * Adds a constraint to the query that requires a particular key's value to\n     * be less than the provided value.\n     * @param {String} key The key to check.\n     * @param value The value that provides an upper bound.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"lessThan\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: mixed*/\n    )\n    /*: ParseQuery*/\n    {\n      return this._addCondition(key, '$lt', value);\n    }\n    /**\n     * Adds a constraint to the query that requires a particular key's value to\n     * be greater than the provided value.\n     * @param {String} key The key to check.\n     * @param value The value that provides an lower bound.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"greaterThan\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: mixed*/\n    )\n    /*: ParseQuery*/\n    {\n      return this._addCondition(key, '$gt', value);\n    }\n    /**\n     * Adds a constraint to the query that requires a particular key's value to\n     * be less than or equal to the provided value.\n     * @param {String} key The key to check.\n     * @param value The value that provides an upper bound.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"lessThanOrEqualTo\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: mixed*/\n    )\n    /*: ParseQuery*/\n    {\n      return this._addCondition(key, '$lte', value);\n    }\n    /**\n     * Adds a constraint to the query that requires a particular key's value to\n     * be greater than or equal to the provided value.\n     * @param {String} key The key to check.\n     * @param value The value that provides an lower bound.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"greaterThanOrEqualTo\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: mixed*/\n    )\n    /*: ParseQuery*/\n    {\n      return this._addCondition(key, '$gte', value);\n    }\n    /**\n     * Adds a constraint to the query that requires a particular key's value to\n     * be contained in the provided list of values.\n     * @param {String} key The key to check.\n     * @param {Array} values The values that will match.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"containedIn\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: mixed*/\n    )\n    /*: ParseQuery*/\n    {\n      return this._addCondition(key, '$in', value);\n    }\n    /**\n     * Adds a constraint to the query that requires a particular key's value to\n     * not be contained in the provided list of values.\n     * @param {String} key The key to check.\n     * @param {Array} values The values that will not match.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"notContainedIn\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: mixed*/\n    )\n    /*: ParseQuery*/\n    {\n      return this._addCondition(key, '$nin', value);\n    }\n    /**\n     * Adds a constraint to the query that requires a particular key's value to\n     * be contained by the provided list of values. Get objects where all array elements match.\n     * @param {String} key The key to check.\n     * @param {Array} values The values that will match.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"containedBy\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: Array<mixed>*/\n    )\n    /*: ParseQuery*/\n    {\n      return this._addCondition(key, '$containedBy', value);\n    }\n    /**\n     * Adds a constraint to the query that requires a particular key's value to\n     * contain each one of the provided list of values.\n     * @param {String} key The key to check.  This key's value must be an array.\n     * @param {Array} values The values that will match.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"containsAll\",\n    value: function (key\n    /*: string*/\n    , values\n    /*: Array<mixed>*/\n    )\n    /*: ParseQuery*/\n    {\n      return this._addCondition(key, '$all', values);\n    }\n    /**\n     * Adds a constraint to the query that requires a particular key's value to\n     * contain each one of the provided list of values starting with given strings.\n     * @param {String} key The key to check.  This key's value must be an array.\n     * @param {Array<String>} values The string values that will match as starting string.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"containsAllStartingWith\",\n    value: function (key\n    /*: string*/\n    , values\n    /*: Array<string>*/\n    )\n    /*: ParseQuery*/\n    {\n      var _this = this;\n\n      if (!Array.isArray(values)) {\n        values = [values];\n      }\n\n      var regexObject = values.map(function (value) {\n        return {\n          '$regex': _this._regexStartWith(value)\n        };\n      });\n      return this.containsAll(key, regexObject);\n    }\n    /**\n     * Adds a constraint for finding objects that contain the given key.\n     * @param {String} key The key that should exist.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"exists\",\n    value: function (key\n    /*: string*/\n    )\n    /*: ParseQuery*/\n    {\n      return this._addCondition(key, '$exists', true);\n    }\n    /**\n     * Adds a constraint for finding objects that do not contain a given key.\n     * @param {String} key The key that should not exist\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"doesNotExist\",\n    value: function (key\n    /*: string*/\n    )\n    /*: ParseQuery*/\n    {\n      return this._addCondition(key, '$exists', false);\n    }\n    /**\n     * Adds a regular expression constraint for finding string values that match\n     * the provided regular expression.\n     * This may be slow for large datasets.\n     * @param {String} key The key that the string to match is stored in.\n     * @param {RegExp} regex The regular expression pattern to match.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"matches\",\n    value: function (key\n    /*: string*/\n    , regex\n    /*: RegExp*/\n    , modifiers\n    /*: string*/\n    )\n    /*: ParseQuery*/\n    {\n      this._addCondition(key, '$regex', regex);\n\n      if (!modifiers) {\n        modifiers = '';\n      }\n\n      if (regex.ignoreCase) {\n        modifiers += 'i';\n      }\n\n      if (regex.multiline) {\n        modifiers += 'm';\n      }\n\n      if (modifiers.length) {\n        this._addCondition(key, '$options', modifiers);\n      }\n\n      return this;\n    }\n    /**\n     * Adds a constraint that requires that a key's value matches a Parse.Query\n     * constraint.\n     * @param {String} key The key that the contains the object to match the\n     *                     query.\n     * @param {Parse.Query} query The query that should match.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"matchesQuery\",\n    value: function (key\n    /*: string*/\n    , query\n    /*: ParseQuery*/\n    )\n    /*: ParseQuery*/\n    {\n      var queryJSON = query.toJSON();\n      queryJSON.className = query.className;\n      return this._addCondition(key, '$inQuery', queryJSON);\n    }\n    /**\n     * Adds a constraint that requires that a key's value not matches a\n     * Parse.Query constraint.\n     * @param {String} key The key that the contains the object to match the\n     *                     query.\n     * @param {Parse.Query} query The query that should not match.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"doesNotMatchQuery\",\n    value: function (key\n    /*: string*/\n    , query\n    /*: ParseQuery*/\n    )\n    /*: ParseQuery*/\n    {\n      var queryJSON = query.toJSON();\n      queryJSON.className = query.className;\n      return this._addCondition(key, '$notInQuery', queryJSON);\n    }\n    /**\n     * Adds a constraint that requires that a key's value matches a value in\n     * an object returned by a different Parse.Query.\n     * @param {String} key The key that contains the value that is being\n     *                     matched.\n     * @param {String} queryKey The key in the objects returned by the query to\n     *                          match against.\n     * @param {Parse.Query} query The query to run.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"matchesKeyInQuery\",\n    value: function (key\n    /*: string*/\n    , queryKey\n    /*: string*/\n    , query\n    /*: ParseQuery*/\n    )\n    /*: ParseQuery*/\n    {\n      var queryJSON = query.toJSON();\n      queryJSON.className = query.className;\n      return this._addCondition(key, '$select', {\n        key: queryKey,\n        query: queryJSON\n      });\n    }\n    /**\n     * Adds a constraint that requires that a key's value not match a value in\n     * an object returned by a different Parse.Query.\n     * @param {String} key The key that contains the value that is being\n     *                     excluded.\n     * @param {String} queryKey The key in the objects returned by the query to\n     *                          match against.\n     * @param {Parse.Query} query The query to run.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"doesNotMatchKeyInQuery\",\n    value: function (key\n    /*: string*/\n    , queryKey\n    /*: string*/\n    , query\n    /*: ParseQuery*/\n    )\n    /*: ParseQuery*/\n    {\n      var queryJSON = query.toJSON();\n      queryJSON.className = query.className;\n      return this._addCondition(key, '$dontSelect', {\n        key: queryKey,\n        query: queryJSON\n      });\n    }\n    /**\n     * Adds a constraint for finding string values that contain a provided\n     * string.  This may be slow for large datasets.\n     * @param {String} key The key that the string to match is stored in.\n     * @param {String} substring The substring that the value must contain.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"contains\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: string*/\n    )\n    /*: ParseQuery*/\n    {\n      if (typeof value !== 'string') {\n        throw new Error('The value being searched for must be a string.');\n      }\n\n      return this._addCondition(key, '$regex', quote(value));\n    }\n    /**\n    * Adds a constraint for finding string values that contain a provided\n    * string. This may be slow for large datasets. Requires Parse-Server > 2.5.0\n    *\n    * In order to sort you must use select and ascending ($score is required)\n    *  <pre>\n    *   query.fullText('field', 'term');\n    *   query.ascending('$score');\n    *   query.select('$score');\n    *  </pre>\n    *\n    * To retrieve the weight / rank\n    *  <pre>\n    *   object->get('score');\n    *  </pre>\n    *\n    * You can define optionals by providing an object as a third parameter\n    *  <pre>\n    *   query.fullText('field', 'term', { language: 'es', diacriticSensitive: true });\n    *  </pre>\n    *\n    * @param {String} key The key that the string to match is stored in.\n    * @param {String} value The string to search\n    * @param {Object} options (Optional)\n    * @param {String} options.language The language that determines the list of stop words for the search and the rules for the stemmer and tokenizer.\n    * @param {Boolean} options.caseSensitive A boolean flag to enable or disable case sensitive search.\n    * @param {Boolean} options.diacriticSensitive A boolean flag to enable or disable diacritic sensitive search.\n    * @return {Parse.Query} Returns the query, so you can chain this call.\n    */\n\n  }, {\n    key: \"fullText\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: string*/\n    , options\n    /*: ?Object*/\n    )\n    /*: ParseQuery*/\n    {\n      options = options || {};\n\n      if (!key) {\n        throw new Error('A key is required.');\n      }\n\n      if (!value) {\n        throw new Error('A search term is required');\n      }\n\n      if (typeof value !== 'string') {\n        throw new Error('The value being searched for must be a string.');\n      }\n\n      var fullOptions = {};\n      fullOptions.$term = value;\n\n      for (var option in options) {\n        switch (option) {\n          case 'language':\n            fullOptions.$language = options[option];\n            break;\n\n          case 'caseSensitive':\n            fullOptions.$caseSensitive = options[option];\n            break;\n\n          case 'diacriticSensitive':\n            fullOptions.$diacriticSensitive = options[option];\n            break;\n\n          default:\n            throw new Error(\"Unknown option: \".concat(option));\n        }\n      }\n\n      return this._addCondition(key, '$text', {\n        $search: fullOptions\n      });\n    }\n    /**\n     * Method to sort the full text search by text score\n     *\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"sortByTextScore\",\n    value: function () {\n      this.ascending('$score');\n      this.select(['$score']);\n      return this;\n    }\n    /**\n     * Adds a constraint for finding string values that start with a provided\n     * string.  This query will use the backend index, so it will be fast even\n     * for large datasets.\n     * @param {String} key The key that the string to match is stored in.\n     * @param {String} prefix The substring that the value must start with.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"startsWith\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: string*/\n    )\n    /*: ParseQuery*/\n    {\n      if (typeof value !== 'string') {\n        throw new Error('The value being searched for must be a string.');\n      }\n\n      return this._addCondition(key, '$regex', this._regexStartWith(value));\n    }\n    /**\n     * Adds a constraint for finding string values that end with a provided\n     * string.  This will be slow for large datasets.\n     * @param {String} key The key that the string to match is stored in.\n     * @param {String} suffix The substring that the value must end with.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"endsWith\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: string*/\n    )\n    /*: ParseQuery*/\n    {\n      if (typeof value !== 'string') {\n        throw new Error('The value being searched for must be a string.');\n      }\n\n      return this._addCondition(key, '$regex', quote(value) + '$');\n    }\n    /**\n     * Adds a proximity based constraint for finding objects with key point\n     * values near the point given.\n     * @param {String} key The key that the Parse.GeoPoint is stored in.\n     * @param {Parse.GeoPoint} point The reference Parse.GeoPoint that is used.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"near\",\n    value: function (key\n    /*: string*/\n    , point\n    /*: ParseGeoPoint*/\n    )\n    /*: ParseQuery*/\n    {\n      if (!(point instanceof _ParseGeoPoint.default)) {\n        // Try to cast it as a GeoPoint\n        point = new _ParseGeoPoint.default(point);\n      }\n\n      return this._addCondition(key, '$nearSphere', point);\n    }\n    /**\n     * Adds a proximity based constraint for finding objects with key point\n     * values near the point given and within the maximum distance given.\n     * @param {String} key The key that the Parse.GeoPoint is stored in.\n     * @param {Parse.GeoPoint} point The reference Parse.GeoPoint that is used.\n     * @param {Number} maxDistance Maximum distance (in radians) of results to\n     *   return.\n     * @param {Boolean} sorted A Bool value that is true if results should be\n     *   sorted by distance ascending, false is no sorting is required,\n     *   defaults to true.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"withinRadians\",\n    value: function (key\n    /*: string*/\n    , point\n    /*: ParseGeoPoint*/\n    , distance\n    /*: number*/\n    , sorted\n    /*: boolean*/\n    )\n    /*: ParseQuery*/\n    {\n      if (sorted || sorted === undefined) {\n        this.near(key, point);\n        return this._addCondition(key, '$maxDistance', distance);\n      } else {\n        return this._addCondition(key, '$geoWithin', {\n          '$centerSphere': [[point.longitude, point.latitude], distance]\n        });\n      }\n    }\n    /**\n     * Adds a proximity based constraint for finding objects with key point\n     * values near the point given and within the maximum distance given.\n     * Radius of earth used is 3958.8 miles.\n     * @param {String} key The key that the Parse.GeoPoint is stored in.\n     * @param {Parse.GeoPoint} point The reference Parse.GeoPoint that is used.\n     * @param {Number} maxDistance Maximum distance (in miles) of results to\n     *   return.\n     * @param {Boolean} sorted A Bool value that is true if results should be\n     *   sorted by distance ascending, false is no sorting is required,\n     *   defaults to true.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"withinMiles\",\n    value: function (key\n    /*: string*/\n    , point\n    /*: ParseGeoPoint*/\n    , distance\n    /*: number*/\n    , sorted\n    /*: boolean*/\n    )\n    /*: ParseQuery*/\n    {\n      return this.withinRadians(key, point, distance / 3958.8, sorted);\n    }\n    /**\n     * Adds a proximity based constraint for finding objects with key point\n     * values near the point given and within the maximum distance given.\n     * Radius of earth used is 6371.0 kilometers.\n     * @param {String} key The key that the Parse.GeoPoint is stored in.\n     * @param {Parse.GeoPoint} point The reference Parse.GeoPoint that is used.\n     * @param {Number} maxDistance Maximum distance (in kilometers) of results\n     *   to return.\n     * @param {Boolean} sorted A Bool value that is true if results should be\n     *   sorted by distance ascending, false is no sorting is required,\n     *   defaults to true.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"withinKilometers\",\n    value: function (key\n    /*: string*/\n    , point\n    /*: ParseGeoPoint*/\n    , distance\n    /*: number*/\n    , sorted\n    /*: boolean*/\n    )\n    /*: ParseQuery*/\n    {\n      return this.withinRadians(key, point, distance / 6371.0, sorted);\n    }\n    /**\n     * Adds a constraint to the query that requires a particular key's\n     * coordinates be contained within a given rectangular geographic bounding\n     * box.\n     * @param {String} key The key to be constrained.\n     * @param {Parse.GeoPoint} southwest\n     *     The lower-left inclusive corner of the box.\n     * @param {Parse.GeoPoint} northeast\n     *     The upper-right inclusive corner of the box.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"withinGeoBox\",\n    value: function (key\n    /*: string*/\n    , southwest\n    /*: ParseGeoPoint*/\n    , northeast\n    /*: ParseGeoPoint*/\n    )\n    /*: ParseQuery*/\n    {\n      if (!(southwest instanceof _ParseGeoPoint.default)) {\n        southwest = new _ParseGeoPoint.default(southwest);\n      }\n\n      if (!(northeast instanceof _ParseGeoPoint.default)) {\n        northeast = new _ParseGeoPoint.default(northeast);\n      }\n\n      this._addCondition(key, '$within', {\n        '$box': [southwest, northeast]\n      });\n\n      return this;\n    }\n    /**\n     * Adds a constraint to the query that requires a particular key's\n     * coordinates be contained within and on the bounds of a given polygon.\n     * Supports closed and open (last point is connected to first) paths\n     *\n     * Polygon must have at least 3 points\n     *\n     * @param {String} key The key to be constrained.\n     * @param {Array} array of geopoints\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"withinPolygon\",\n    value: function (key\n    /*: string*/\n    , points\n    /*: Array<Array<number>>*/\n    )\n    /*: ParseQuery*/\n    {\n      return this._addCondition(key, '$geoWithin', {\n        '$polygon': points\n      });\n    }\n    /**\n     * Add a constraint to the query that requires a particular key's\n     * coordinates that contains a ParseGeoPoint\n     *\n     * @param {String} key The key to be constrained.\n     * @param {Parse.GeoPoint} GeoPoint\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"polygonContains\",\n    value: function (key\n    /*: string*/\n    , point\n    /*: ParseGeoPoint*/\n    )\n    /*: ParseQuery*/\n    {\n      return this._addCondition(key, '$geoIntersects', {\n        '$point': point\n      });\n    }\n    /** Query Orderings **/\n\n    /**\n     * Sorts the results in ascending order by the given key.\n     *\n     * @param {(String|String[]|...String)} key The key to order by, which is a\n     * string of comma separated values, or an Array of keys, or multiple keys.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"ascending\",\n    value: function ()\n    /*: ParseQuery*/\n    {\n      this._order = [];\n\n      for (var _len = arguments.length, keys = new Array(_len), _key5 = 0; _key5 < _len; _key5++) {\n        keys[_key5] = arguments[_key5];\n      }\n\n      return this.addAscending.apply(this, keys);\n    }\n    /**\n     * Sorts the results in ascending order by the given key,\n     * but can also add secondary sort descriptors without overwriting _order.\n     *\n     * @param {(String|String[]|...String)} key The key to order by, which is a\n     * string of comma separated values, or an Array of keys, or multiple keys.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"addAscending\",\n    value: function ()\n    /*: ParseQuery*/\n    {\n      var _this5 = this;\n\n      if (!this._order) {\n        this._order = [];\n      }\n\n      for (var _len2 = arguments.length, keys = new Array(_len2), _key6 = 0; _key6 < _len2; _key6++) {\n        keys[_key6] = arguments[_key6];\n      }\n\n      keys.forEach(function (key) {\n        if (Array.isArray(key)) {\n          key = key.join();\n        }\n\n        _this5._order = _this5._order.concat(key.replace(/\\s/g, '').split(','));\n      });\n      return this;\n    }\n    /**\n     * Sorts the results in descending order by the given key.\n     *\n     * @param {(String|String[]|...String)} key The key to order by, which is a\n     * string of comma separated values, or an Array of keys, or multiple keys.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"descending\",\n    value: function ()\n    /*: ParseQuery*/\n    {\n      this._order = [];\n\n      for (var _len3 = arguments.length, keys = new Array(_len3), _key7 = 0; _key7 < _len3; _key7++) {\n        keys[_key7] = arguments[_key7];\n      }\n\n      return this.addDescending.apply(this, keys);\n    }\n    /**\n     * Sorts the results in descending order by the given key,\n     * but can also add secondary sort descriptors without overwriting _order.\n     *\n     * @param {(String|String[]|...String)} key The key to order by, which is a\n     * string of comma separated values, or an Array of keys, or multiple keys.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"addDescending\",\n    value: function ()\n    /*: ParseQuery*/\n    {\n      var _this6 = this;\n\n      if (!this._order) {\n        this._order = [];\n      }\n\n      for (var _len4 = arguments.length, keys = new Array(_len4), _key8 = 0; _key8 < _len4; _key8++) {\n        keys[_key8] = arguments[_key8];\n      }\n\n      keys.forEach(function (key) {\n        if (Array.isArray(key)) {\n          key = key.join();\n        }\n\n        _this6._order = _this6._order.concat(key.replace(/\\s/g, '').split(',').map(function (k) {\n          return '-' + k;\n        }));\n      });\n      return this;\n    }\n    /** Query Options **/\n\n    /**\n     * Sets the number of results to skip before returning any results.\n     * This is useful for pagination.\n     * Default is to skip zero results.\n     * @param {Number} n the number of results to skip.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"skip\",\n    value: function (n\n    /*: number*/\n    )\n    /*: ParseQuery*/\n    {\n      if (typeof n !== 'number' || n < 0) {\n        throw new Error('You can only skip by a positive number');\n      }\n\n      this._skip = n;\n      return this;\n    }\n    /**\n     * Sets the limit of the number of results to return. The default limit is\n     * 100, with a maximum of 1000 results being returned at a time.\n     * @param {Number} n the number of results to limit to.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"limit\",\n    value: function (n\n    /*: number*/\n    )\n    /*: ParseQuery*/\n    {\n      if (typeof n !== 'number') {\n        throw new Error('You can only set the limit to a numeric value');\n      }\n\n      this._limit = n;\n      return this;\n    }\n    /**\n     * Includes nested Parse.Objects for the provided key.  You can use dot\n     * notation to specify which fields in the included object are also fetched.\n     *\n     * You can include all nested Parse.Objects by passing in '*'.\n     * Requires Parse Server 3.0.0+\n     * <pre>query.include('*');</pre>\n     *\n     * @param {...String|Array<String>} key The name(s) of the key(s) to include.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"include\",\n    value: function ()\n    /*: ParseQuery*/\n    {\n      var _this7 = this;\n\n      for (var _len5 = arguments.length, keys = new Array(_len5), _key9 = 0; _key9 < _len5; _key9++) {\n        keys[_key9] = arguments[_key9];\n      }\n\n      keys.forEach(function (key) {\n        if (Array.isArray(key)) {\n          _this7._include = _this7._include.concat(key);\n        } else {\n          _this7._include.push(key);\n        }\n      });\n      return this;\n    }\n    /**\n     * Includes all nested Parse.Objects.\n     *\n     * Requires Parse Server 3.0.0+\n     *\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"includeAll\",\n    value: function ()\n    /*: ParseQuery*/\n    {\n      return this.include('*');\n    }\n    /**\n     * Restricts the fields of the returned Parse.Objects to include only the\n     * provided keys.  If this is called multiple times, then all of the keys\n     * specified in each of the calls will be included.\n     * @param {...String|Array<String>} keys The name(s) of the key(s) to include.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"select\",\n    value: function ()\n    /*: ParseQuery*/\n    {\n      var _this8 = this;\n\n      if (!this._select) {\n        this._select = [];\n      }\n\n      for (var _len6 = arguments.length, keys = new Array(_len6), _key10 = 0; _key10 < _len6; _key10++) {\n        keys[_key10] = arguments[_key10];\n      }\n\n      keys.forEach(function (key) {\n        if (Array.isArray(key)) {\n          _this8._select = _this8._select.concat(key);\n        } else {\n          _this8._select.push(key);\n        }\n      });\n      return this;\n    }\n    /**\n     * Subscribe this query to get liveQuery updates\n     *\n     * @param {String} sessionToken (optional) Defaults to the currentUser\n     * @return {Promise<LiveQuerySubscription>} Returns the liveQuerySubscription, it's an event emitter\n     * which can be used to get liveQuery updates.\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee2(sessionToken\n      /*:: ?: string*/\n      ) {\n        var currentUser, liveQueryClient, subscription;\n        return _regenerator.default.wrap(function (_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _CoreManager.default.getUserController().currentUserAsync();\n\n              case 2:\n                currentUser = _context2.sent;\n\n                if (!sessionToken) {\n                  sessionToken = currentUser ? currentUser.getSessionToken() : undefined;\n                }\n\n                _context2.next = 6;\n                return _CoreManager.default.getLiveQueryController().getDefaultLiveQueryClient();\n\n              case 6:\n                liveQueryClient = _context2.sent;\n\n                if (liveQueryClient.shouldOpen()) {\n                  liveQueryClient.open();\n                }\n\n                subscription = liveQueryClient.subscribe(this, sessionToken);\n                return _context2.abrupt(\"return\", subscription);\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function () {\n        return _subscribe.apply(this, arguments);\n      };\n    }()\n    /**\n     * Constructs a Parse.Query that is the OR of the passed in queries.  For\n     * example:\n     * <pre>var compoundQuery = Parse.Query.or(query1, query2, query3);</pre>\n     *\n     * will create a compoundQuery that is an or of the query1, query2, and\n     * query3.\n     * @param {...Parse.Query} var_args The list of queries to OR.\n     * @static\n     * @return {Parse.Query} The query that is the OR of the passed in queries.\n     */\n\n  }, {\n    key: \"fromLocalDatastore\",\n\n    /**\n     * Changes the source of this query to all pinned objects.\n     *\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n    value: function ()\n    /*: ParseQuery*/\n    {\n      return this.fromPinWithName(null);\n    }\n    /**\n     * Changes the source of this query to the default group of pinned objects.\n     *\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"fromPin\",\n    value: function ()\n    /*: ParseQuery*/\n    {\n      return this.fromPinWithName(_LocalDatastoreUtils.DEFAULT_PIN);\n    }\n    /**\n     * Changes the source of this query to a specific group of pinned objects.\n     *\n     * @param {String} name The name of query source.\n     * @return {Parse.Query} Returns the query, so you can chain this call.\n     */\n\n  }, {\n    key: \"fromPinWithName\",\n    value: function (name\n    /*:: ?: string*/\n    )\n    /*: ParseQuery*/\n    {\n      var localDatastore = _CoreManager.default.getLocalDatastore();\n\n      if (localDatastore.checkIfEnabled()) {\n        this._queriesLocalDatastore = true;\n        this._localDatastorePinName = name;\n      }\n\n      return this;\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function (className\n    /*: string*/\n    , json\n    /*: QueryJSON*/\n    )\n    /*: ParseQuery*/\n    {\n      var query = new ParseQuery(className);\n      return query.withJSON(json);\n    }\n  }, {\n    key: \"or\",\n    value: function ()\n    /*: ParseQuery*/\n    {\n      for (var _len7 = arguments.length, queries = new Array(_len7), _key11 = 0; _key11 < _len7; _key11++) {\n        queries[_key11] = arguments[_key11];\n      }\n\n      var className = _getClassNameFromQueries(queries);\n\n      var query = new ParseQuery(className);\n\n      query._orQuery(queries);\n\n      return query;\n    }\n    /**\n     * Constructs a Parse.Query that is the AND of the passed in queries.  For\n     * example:\n     * <pre>var compoundQuery = Parse.Query.and(query1, query2, query3);</pre>\n     *\n     * will create a compoundQuery that is an and of the query1, query2, and\n     * query3.\n     * @param {...Parse.Query} var_args The list of queries to AND.\n     * @static\n     * @return {Parse.Query} The query that is the AND of the passed in queries.\n     */\n\n  }, {\n    key: \"and\",\n    value: function ()\n    /*: ParseQuery*/\n    {\n      for (var _len8 = arguments.length, queries = new Array(_len8), _key12 = 0; _key12 < _len8; _key12++) {\n        queries[_key12] = arguments[_key12];\n      }\n\n      var className = _getClassNameFromQueries(queries);\n\n      var query = new ParseQuery(className);\n\n      query._andQuery(queries);\n\n      return query;\n    }\n    /**\n     * Constructs a Parse.Query that is the NOR of the passed in queries.  For\n     * example:\n     * <pre>const compoundQuery = Parse.Query.nor(query1, query2, query3);</pre>\n     *\n     * will create a compoundQuery that is a nor of the query1, query2, and\n     * query3.\n     * @param {...Parse.Query} var_args The list of queries to NOR.\n     * @static\n     * @return {Parse.Query} The query that is the NOR of the passed in queries.\n     */\n\n  }, {\n    key: \"nor\",\n    value: function ()\n    /*: ParseQuery*/\n    {\n      for (var _len9 = arguments.length, queries = new Array(_len9), _key13 = 0; _key13 < _len9; _key13++) {\n        queries[_key13] = arguments[_key13];\n      }\n\n      var className = _getClassNameFromQueries(queries);\n\n      var query = new ParseQuery(className);\n\n      query._norQuery(queries);\n\n      return query;\n    }\n  }]);\n  return ParseQuery;\n}();\n\nvar DefaultController = {\n  find: function (className\n  /*: string*/\n  , params\n  /*: QueryJSON*/\n  , options\n  /*: RequestOptions*/\n  )\n  /*: Promise<Array<ParseObject>>*/\n  {\n    var RESTController = _CoreManager.default.getRESTController();\n\n    return RESTController.request('GET', 'classes/' + className, params, options);\n  },\n  aggregate: function (className\n  /*: string*/\n  , params\n  /*: any*/\n  , options\n  /*: RequestOptions*/\n  )\n  /*: Promise<Array<mixed>>*/\n  {\n    var RESTController = _CoreManager.default.getRESTController();\n\n    return RESTController.request('GET', 'aggregate/' + className, params, options);\n  }\n};\n\n_CoreManager.default.setQueryController(DefaultController);\n\nvar _default = ParseQuery;\nexports.default = _default;"},"lineCount":2250}},"error":null,"hash":"c2d48040bfbef9a0259bd1f0e74bedbc","cacheData":{"env":{}}}